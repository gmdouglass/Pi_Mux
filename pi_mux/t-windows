TMUX(1)                                                                        BSD General Commands Manual                                                                       TMUX(1)

[1mNAME[0m
     [1mtmux [22mâ€” terminal multiplexer

[1mSYNOPSIS[0m
     [1mtmux [22m[[1m-2CluvV[22m] [[1m-c [4m[22mshell-command[24m] [[1m-f [4m[22mfile[24m] [[1m-L [4m[22msocket-name[24m] [[1m-S [4m[22msocket-path[24m] [[4mcommand[24m [[4mflags[24m]]

[1mDESCRIPTION[0m
     [1mtmux [22mis a terminal multiplexer: it enables a number of terminals to be created, accessed, and controlled from a single screen.  [1mtmux [22mmay be detached from a screen and continue
     running in the background, then later reattached.

     When [1mtmux [22mis started it creates a new [4msession[24m with a single [4mwindow[24m and displays it on screen.  A status line at the bottom of the screen shows information on the current session
     and is used to enter interactive commands.

     A session is a single collection of [4mpseudo[24m [4mterminals[24m under the management of [1mtmux[22m.  Each session has one or more windows linked to it.  A window occupies the entire screen and may
     be split into rectangular panes, each of which is a separate pseudo terminal (the pty(4) manual page documents the technical details of pseudo terminals).  Any number of [1mtmux[0m
     instances may connect to the same session, and any number of windows may be present in the same session.  Once all sessions are killed, [1mtmux [22mexits.

     Each session is persistent and will survive accidental disconnection (such as ssh(1) connection timeout) or intentional detaching (with the â€˜C-b dâ€™ key strokes).  [1mtmux [22mmay be
     reattached using:

           $ tmux attach

     In [1mtmux[22m, a session is displayed on screen by a [4mclient[24m and all sessions are managed by a single [4mserver[24m.  The server and each client are separate processes which communicate through
     a socket in [4m/tmp[24m.

     The options are as follows:

     [1m-2            [22mForce [1mtmux [22mto assume the terminal supports 256 colours.

     [1m-C            [22mStart in control mode (see the [4mCONTROL[24m [4mMODE[24m section).  Given twice ([1m-CC[22m) disables echo.

     [1m-c [4m[22mshell-command[0m
                   Execute [4mshell-command[24m using the default shell.  If necessary, the [1mtmux [22mserver will be started to retrieve the [1mdefault-shell [22moption.  This option is for compatibility
                   with sh(1) when [1mtmux [22mis used as a login shell.

     [1m-f [4m[22mfile[24m       Specify an alternative configuration file.  By default, [1mtmux [22mloads the system configuration file from [4m/etc/tmux.conf[24m, if present, then looks for a user configuration
                   file at [4m~/.tmux.conf[24m.

                   The configuration file is a set of [1mtmux [22mcommands which are executed in sequence when the server is first started.  [1mtmux [22mloads configuration files once when the
                   server process has started.  The [1msource-file [22mcommand may be used to load a file later.

                   [1mtmux [22mshows any error messages from commands in configuration files in the first session created, and continues to process the rest of the configuration file.

     [1m-L [4m[22msocket-name[0m
                   [1mtmux [22mstores the server socket in a directory under TMUX_TMPDIR or [4m/tmp[24m if it is unset.  The default socket is named [4mdefault[24m.  This option allows a different socket
                   name to be specified, allowing several independent [1mtmux [22mservers to be run.  Unlike [1m-S [22ma full path is not necessary: the sockets are all created in the same direc-
                   tory.

                   If the socket is accidentally removed, the SIGUSR1 signal may be sent to the [1mtmux [22mserver process to recreate it (note that this will fail if any parent directories
                   are missing).

     [1m-l            [22mBehave as a login shell.  This flag currently has no effect and is for compatibility with other shells when using tmux as a login shell.

     [1m-S [4m[22msocket-path[0m
                   Specify a full alternative path to the server socket.  If [1m-S [22mis specified, the default socket directory is not used and any [1m-L [22mflag is ignored.

     [1m-u            [22mWhen starting, [1mtmux [22mlooks for the LC_ALL, LC_CTYPE and LANG environment variables: if the first found contains â€˜UTF-8â€™, then the terminal is assumed to support
                   UTF-8.  This is not always correct: the [1m-u [22mflag explicitly informs [1mtmux [22mthat UTF-8 is supported.

                   Note that [1mtmux [22mitself always accepts UTF-8; this controls whether it will send UTF-8 characters to the terminal it is running (if not, they are replaced by â€˜_â€™).

     [1m-v            [22mRequest verbose logging.  Log messages will be saved into [4mtmux-client-PID.log[24m and [4mtmux-server-PID.log[24m files in the current directory, where [4mPID[24m is the PID of the
                   server or client process.  If [1m-v [22mis specified twice, an additional [4mtmux-out-PID.log[24m file is generated with a copy of everything [1mtmux [22mwrites to the terminal.

                   The SIGUSR2 signal may be sent to the [1mtmux [22mserver process to toggle logging between on (as if [1m-v [22mwas given) and off.

     [1m-V            [22mReport the [1mtmux [22mversion.

     [4mcommand[24m [[4mflags[24m]
                   This specifies one of a set of commands used to control [1mtmux[22m, as described in the following sections.  If no commands are specified, the [1mnew-session [22mcommand is
                   assumed.

[1mKEY BINDINGS[0m
     [1mtmux [22mmay be controlled from an attached client by using a key combination of a prefix key, â€˜C-bâ€™ (Ctrl-b) by default, followed by a command key.

     The default command key bindings are:

           C-b         Send the prefix key (C-b) through to the application.
           C-o         Rotate the panes in the current window forwards.
           C-z         Suspend the [1mtmux [22mclient.
           !           Break the current pane out of the window.
           "           Split the current pane into two, top and bottom.
           #           List all paste buffers.
           $           Rename the current session.
           %           Split the current pane into two, left and right.
           &           Kill the current window.
           '           Prompt for a window index to select.
           (           Switch the attached client to the previous session.
           )           Switch the attached client to the next session.
           ,           Rename the current window.
           -           Delete the most recently copied buffer of text.
           .           Prompt for an index to move the current window.
           0 to 9      Select windows 0 to 9.
           :           Enter the [1mtmux [22mcommand prompt.
           ;           Move to the previously active pane.
           =           Choose which buffer to paste interactively from a list.
           ?           List all key bindings.
           D           Choose a client to detach.
           L           Switch the attached client back to the last session.
           [           Enter copy mode to copy text or view the history.
           ]           Paste the most recently copied buffer of text.
           c           Create a new window.
           d           Detach the current client.
           f           Prompt to search for text in open windows.
           i           Display some information about the current window.
           l           Move to the previously selected window.
           n           Change to the next window.
           o           Select the next pane in the current window.
           p           Change to the previous window.
           q           Briefly display pane indexes.
           r           Force redraw of the attached client.
           m           Mark the current pane (see [1mselect-pane -m[22m).
           M           Clear the marked pane.
           s           Select a new session for the attached client interactively.
           t           Show the time.
           w           Choose the current window interactively.
           x           Kill the current pane.
           z           Toggle zoom state of the current pane.
           {           Swap the current pane with the previous pane.
           }           Swap the current pane with the next pane.
           ~           Show previous messages from [1mtmux[22m, if any.
           Page Up     Enter copy mode and scroll one page up.
           Up, Down
           Left, Right
                       Change to the pane above, below, to the left, or to the right of the current pane.
           M-1 to M-5  Arrange panes in one of the five preset layouts: even-horizontal, even-vertical, main-horizontal, main-vertical, or tiled.
           Space       Arrange the current window in the next preset layout.
           M-n         Move to the next window with a bell or activity marker.
           M-o         Rotate the panes in the current window backwards.
           M-p         Move to the previous window with a bell or activity marker.
           C-Up, C-Down
           C-Left, C-Right
                       Resize the current pane in steps of one cell.
           M-Up, M-Down
           M-Left, M-Right
                       Resize the current pane in steps of five cells.

     Key bindings may be changed with the [1mbind-key [22mand [1munbind-key [22mcommands.

[1mCOMMANDS[0m
     This section contains a list of the commands supported by [1mtmux[22m.  Most commands accept the optional [1m-t [22m(and sometimes [1m-s[22m) argument with one of [4mtarget-client[24m, [4mtarget-session[0m
     [4mtarget-window[24m, or [4mtarget-pane[24m.  These specify the client, session, window or pane which a command should affect.

     [4mtarget-client[24m should be the name of the client, typically the pty(4) file to which the client is connected, for example either of [4m/dev/ttyp1[24m or [4mttyp1[24m for the client attached to
     [4m/dev/ttyp1[24m.  If no client is specified, [1mtmux [22mattempts to work out the client currently in use; if that fails, an error is reported.  Clients may be listed with the [1mlist-clients[0m
     command.

     [4mtarget-session[24m is tried as, in order:

           1.   A session ID prefixed with a $.

           2.   An exact name of a session (as listed by the [1mlist-sessions [22mcommand).

           3.   The start of a session name, for example â€˜mysessâ€™ would match a session named â€˜mysessionâ€™.

           4.   An fnmatch(3) pattern which is matched against the session name.

     If the session name is prefixed with an â€˜=â€™, only an exact match is accepted (so â€˜=mysessâ€™ will only match exactly â€˜mysessâ€™, not â€˜mysessionâ€™).

     If a single session is found, it is used as the target session; multiple matches produce an error.  If a session is omitted, the current session is used if available; if no cur-
     rent session is available, the most recently used is chosen.

     [4mtarget-window[24m (or [4msrc-window[24m or [4mdst-window[24m) specifies a window in the form [4msession[24m:[4mwindow[24m.  [4msession[24m follows the same rules as for [4mtarget-session[24m, and [4mwindow[24m is looked for in order
     as:

           1.   A special token, listed below.

           2.   A window index, for example â€˜mysession:1â€™ is window 1 in session â€˜mysessionâ€™.

           3.   A window ID, such as @1.

           4.   An exact window name, such as â€˜mysession:mywindowâ€™.

           5.   The start of a window name, such as â€˜mysession:mywinâ€™.

           6.   As an fnmatch(3) pattern matched against the window name.

     Like sessions, a â€˜=â€™ prefix will do an exact match only.  An empty window name specifies the next unused index if appropriate (for example the [1mnew-window [22mand [1mlink-window [22mcommands)
     otherwise the current window in [4msession[24m is chosen.

     The following special tokens are available to indicate particular windows.  Each has a single-character alternative form.

     [1mToken              Meaning[0m
     {start}       ^    The lowest-numbered window
     {end}         $    The highest-numbered window
     {last}        !    The last (previously current) window
     {next}        +    The next window by number
     {previous}    -    The previous window by number

     [4mtarget-pane[24m (or [4msrc-pane[24m or [4mdst-pane[24m) may be a pane ID or takes a similar form to [4mtarget-window[24m but with the optional addition of a period followed by a pane index or pane ID, for
     example: â€˜mysession:mywindow.1â€™.  If the pane index is omitted, the currently active pane in the specified window is used.  The following special tokens are available for the pane
     index:

     [1mToken                  Meaning[0m
     {last}            !    The last (previously active) pane
     {next}            +    The next pane by number
     {previous}        -    The previous pane by number
     {top}                  The top pane
     {bottom}               The bottom pane
     {left}                 The leftmost pane
     {right}                The rightmost pane
     {top-left}             The top-left pane
     {top-right}            The top-right pane
     {bottom-left}          The bottom-left pane
     {bottom-right}         The bottom-right pane
     {up-of}                The pane above the active pane
     {down-of}              The pane below the active pane
     {left-of}              The pane to the left of the active pane
     {right-of}             The pane to the right of the active pane

     The tokens â€˜+â€™ and â€˜-â€™ may be followed by an offset, for example:

           select-window -t:+2

     In addition, [4mtarget-session[24m, [4mtarget-window[24m or [4mtarget-pane[24m may consist entirely of the token â€˜{mouse}â€™ (alternative form â€˜=â€™) to specify the most recent mouse event (see the [4mMOUSE[0m
     [4mSUPPORT[24m section) or â€˜{marked}â€™ (alternative form â€˜~â€™) to specify the marked pane (see [1mselect-pane -m[22m).

     Sessions, window and panes are each numbered with a unique ID; session IDs are prefixed with a â€˜$â€™, windows with a â€˜@â€™, and panes with a â€˜%â€™.  These are unique and are unchanged
     for the life of the session, window or pane in the [1mtmux [22mserver.  The pane ID is passed to the child process of the pane in the TMUX_PANE environment variable.  IDs may be dis-
     played using the â€˜session_idâ€™, â€˜window_idâ€™, or â€˜pane_idâ€™ formats (see the [4mFORMATS[24m section) and the [1mdisplay-message[22m, [1mlist-sessions[22m, [1mlist-windows [22mor [1mlist-panes [22mcommands.

     [4mshell-command[24m arguments are sh(1) commands.  This may be a single argument passed to the shell, for example:

           new-window 'vi /etc/passwd'

     Will run:

           /bin/sh -c 'vi /etc/passwd'

     Additionally, the [1mnew-window[22m, [1mnew-session[22m, [1msplit-window[22m, [1mrespawn-window [22mand [1mrespawn-pane [22mcommands allow [4mshell-command[24m to be given as multiple arguments and executed directly
     (without â€˜sh -câ€™).  This can avoid issues with shell quoting.  For example:

           $ tmux new-window vi /etc/passwd

     Will run vi(1) directly without invoking the shell.

     [4mcommand[24m [[4marguments[24m] refers to a [1mtmux [22mcommand, passed with the command and arguments separately, for example:

           bind-key F1 set-window-option force-width 81

     Or if using sh(1):

           $ tmux bind-key F1 set-window-option force-width 81

     Multiple commands may be specified together as part of a [4mcommand[24m [4msequence[24m.  Each command should be separated by spaces and a semicolon; commands are executed sequentially from
     left to right and lines ending with a backslash continue on to the next line, except when escaped by another backslash.  A literal semicolon may be included by escaping it with a
     backslash (for example, when specifying a command sequence to [1mbind-key[22m).

     Example [1mtmux [22mcommands include:

           refresh-client -t/dev/ttyp2

           rename-session -tfirst newname

           set-window-option -t:0 monitor-activity on

           new-window ; split-window -d

           bind-key R source-file ~/.tmux.conf \; \
                   display-message "source-file done"

     Or from sh(1):

           $ tmux kill-window -t :1

           $ tmux new-window \; split-window -d

           $ tmux new-session -d 'vi /etc/passwd' \; split-window -d \; attach

[1mCLIENTS AND SESSIONS[0m
     The [1mtmux [22mserver manages clients, sessions, windows and panes.  Clients are attached to sessions to interact with them, either when they are created with the [1mnew-session [22mcommand,
     or later with the [1mattach-session [22mcommand.  Each session has one or more windows [4mlinked[24m into it.  Windows may be linked to multiple sessions and are made up of one or more panes,
     each of which contains a pseudo terminal.  Commands for creating, linking and otherwise manipulating windows are covered in the [4mWINDOWS[24m [4mAND[24m [4mPANES[24m section.

     The following commands are available to manage clients and sessions:

     [1mattach-session [22m[[1m-dEr[22m] [[1m-c [4m[22mworking-directory[24m] [[1m-t [4m[22mtarget-session[24m]
                   (alias: [1mattach[22m)
             If run from outside [1mtmux[22m, create a new client in the current terminal and attach it to [4mtarget-session[24m.  If used from inside, switch the current client.  If [1m-d [22mis speci-
             fied, any other clients attached to the session are detached.  [1m-r [22msignifies the client is read-only (only keys bound to the [1mdetach-client [22mor [1mswitch-client [22mcommands have
             any effect)

             If no server is started, [1mattach-session [22mwill attempt to start it; this will fail unless sessions are created in the configuration file.

             The [4mtarget-session[24m rules for [1mattach-session [22mare slightly adjusted: if [1mtmux [22mneeds to select the most recently used session, it will prefer the most recently used [4munattached[0m
             session.

             [1m-c [22mwill set the session working directory (used for new windows) to [4mworking-directory[24m.

             If [1m-E [22mis used, the [1mupdate-environment [22moption will not be applied.

     [1mdetach-client [22m[[1m-aP[22m] [[1m-E [4m[22mshell-command[24m] [[1m-s [4m[22mtarget-session[24m] [[1m-t [4m[22mtarget-client[24m]
                   (alias: [1mdetach[22m)
             Detach the current client if bound to a key, the client specified with [1m-t[22m, or all clients currently attached to the session specified by [1m-s[22m.  The [1m-a [22moption kills all but
             the client given with [1m-t[22m.  If [1m-P [22mis given, send SIGHUP to the parent process of the client, typically causing it to exit.  With [1m-E[22m, run [4mshell-command[24m to replace the
             client.

     [1mhas-session [22m[[1m-t [4m[22mtarget-session[24m]
                   (alias: [1mhas[22m)
             Report an error and exit with 1 if the specified session does not exist.  If it does exist, exit with 0.

     [1mkill-server[0m
             Kill the [1mtmux [22mserver and clients and destroy all sessions.

     [1mkill-session [22m[[1m-aC[22m] [[1m-t [4m[22mtarget-session[24m]
             Destroy the given session, closing any windows linked to it and no other sessions, and detaching all clients attached to it.  If [1m-a [22mis given, all sessions but the speci-
             fied one is killed.  The [1m-C [22mflag clears alerts (bell, activity, or silence) in all windows linked to the session.

     [1mlist-clients [22m[[1m-F [4m[22mformat[24m] [[1m-t [4m[22mtarget-session[24m]
                   (alias: [1mlsc[22m)
             List all clients attached to the server.  For the meaning of the [1m-F [22mflag, see the [4mFORMATS[24m section.  If [4mtarget-session[24m is specified, list only clients connected to that
             session.

     [1mlist-commands [22m[[1m-F [4m[22mformat[24m]
                   (alias: [1mlscm[22m)
             List the syntax of all commands supported by [1mtmux[22m.

     [1mlist-sessions [22m[[1m-F [4m[22mformat[24m]
                   (alias: [1mls[22m)
             List all sessions managed by the server.  For the meaning of the [1m-F [22mflag, see the [4mFORMATS[24m section.

     [1mlock-client [22m[[1m-t [4m[22mtarget-client[24m]
                   (alias: [1mlockc[22m)
             Lock [4mtarget-client[24m, see the [1mlock-server [22mcommand.

     [1mlock-session [22m[[1m-t [4m[22mtarget-session[24m]
                   (alias: [1mlocks[22m)
             Lock all clients attached to [4mtarget-session[24m.

     [1mnew-session [22m[[1m-AdDEP[22m] [[1m-c [4m[22mstart-directory[24m] [[1m-F [4m[22mformat[24m] [[1m-n [4m[22mwindow-name[24m] [[1m-s [4m[22msession-name[24m] [[1m-t [4m[22mgroup-name[24m] [[1m-x [4m[22mwidth[24m] [[1m-y [4m[22mheight[24m] [[4mshell-command[24m]
                   (alias: [1mnew[22m)
             Create a new session with name [4msession-name[24m.

             The new session is attached to the current terminal unless [1m-d [22mis given.  [4mwindow-name[24m and [4mshell-command[24m are the name of and shell command to execute in the initial window.
             With [1m-d[22m, the initial size is 80 x 24; [1m-x [22mand [1m-y [22mcan be used to specify a different size.

             If run from a terminal, any termios(4) special characters are saved and used for new windows in the new session.

             The [1m-A [22mflag makes [1mnew-session [22mbehave like [1mattach-session [22mif [4msession-name[24m already exists; in this case, [1m-D [22mbehaves like [1m-d [22mto [1mattach-session[22m.

             If [1m-t [22mis given, it specifies a [1msession group[22m.  Sessions in the same group share the same set of windows - new windows are linked to all sessions in the group and any win-
             dows closed removed from all sessions.  The current and previous window and any session options remain independent and any session in a group may be killed without affect-
             ing the others.  The [4mgroup-name[24m argument may be:

             1.      the name of an existing group, in which case the new session is added to that group;

             2.      the name of an existing session - the new session is added to the same group as that session, creating a new group if necessary;

             3.      the name for a new group containing only the new session.

             [1m-n [22mand [4mshell-command[24m are invalid if [1m-t [22mis used.

             The [1m-P [22moption prints information about the new session after it has been created.  By default, it uses the format â€˜#{session_name}:â€™ but a different format may be speci-
             fied with [1m-F[22m.

             If [1m-E [22mis used, the [1mupdate-environment [22moption will not be applied.

     [1mrefresh-client [22m[[1m-C [4m[22mwidth,height[24m] [[1m-S[22m] [[1m-t [4m[22mtarget-client[24m]
                   (alias: [1mrefresh[22m)
             Refresh the current client if bound to a key, or a single client if one is given with [1m-t[22m.  If [1m-S [22mis specified, only update the client's status line.

             [1m-C [22msets the width and height of a control client.

     [1mrename-session [22m[[1m-t [4m[22mtarget-session[24m] [4mnew-name[0m
                   (alias: [1mrename[22m)
             Rename the session to [4mnew-name[24m.

     [1mshow-messages [22m[[1m-JT[22m] [[1m-t [4m[22mtarget-client[24m]
                   (alias: [1mshowmsgs[22m)
             Show client messages or server information.  Any messages displayed on the status line are saved in a per-client message log, up to a maximum of the limit set by the
             [4mmessage-limit[24m server option.  With [1m-t[22m, display the log for [4mtarget-client[24m.  [1m-J [22mand [1m-T [22mshow debugging information about jobs and terminals.

     [1msource-file [22m[[1m-q[22m] [4mpath[0m
                   (alias: [1msource[22m)
             Execute commands from [4mpath[24m (which may be a glob(3) pattern).  If [1m-q [22mis given, no error will be returned if [4mpath[24m does not exist.

             Within a configuration file, commands may be made conditional by surrounding them with [4m%if[24m and [4m%endif[24m lines.  Additional [4m%elif[24m and [4m%else[24m lines may also be used.  The argu-
             ment to [4m%if[24m and [4m%elif[24m is expanded as a format and if it evaluates to false (zero or empty), subsequent lines are ignored until the next [4m%elif[24m, [4m%else[24m or [4m%endif[24m.  For exam-
             ple:

                   %if #{==:#{host},myhost}
                   set -g status-style bg=red
                   %elif #{==:#{host},myotherhost}
                   set -g status-style bg=green
                   %else
                   set -g status-style bg=blue
                   %endif

             Will change the status line to red if running on â€˜myhostâ€™, green if running on â€˜myotherhostâ€™, or blue if running on another host.

     [1mstart-server[0m
                   (alias: [1mstart[22m)
             Start the [1mtmux [22mserver, if not already running, without creating any sessions.

     [1msuspend-client [22m[[1m-t [4m[22mtarget-client[24m]
                   (alias: [1msuspendc[22m)
             Suspend a client by sending SIGTSTP (tty stop).

     [1mswitch-client [22m[[1m-Elnpr[22m] [[1m-c [4m[22mtarget-client[24m] [[1m-t [4m[22mtarget-session[24m] [[1m-T [4m[22mkey-table[24m]
                   (alias: [1mswitchc[22m)
             Switch the current session for client [4mtarget-client[24m to [4mtarget-session[24m.  If [1m-l[22m, [1m-n [22mor [1m-p [22mis used, the client is moved to the last, next or previous session respectively.
             [1m-r [22mtoggles whether a client is read-only (see the [1mattach-session [22mcommand).

             If [1m-E [22mis used, [1mupdate-environment [22moption will not be applied.

             [1m-T [22msets the client's key table; the next key from the client will be interpreted from [4mkey-table[24m.  This may be used to configure multiple prefix keys, or to bind commands
             to sequences of keys.  For example, to make typing â€˜abcâ€™ run the [1mlist-keys [22mcommand:

                   bind-key -Ttable2 c list-keys
                   bind-key -Ttable1 b switch-client -Ttable2
                   bind-key -Troot   a switch-client -Ttable1

[1mWINDOWS AND PANES[0m
     A [1mtmux [22mwindow may be in one of two modes.  The default permits direct access to the terminal attached to the window.  The other is copy mode, which permits a section of a window
     or its history to be copied to a [4mpaste[24m [4mbuffer[24m for later insertion into another window.  This mode is entered with the [1mcopy-mode [22mcommand, bound to â€˜[â€™ by default.  It is also
     entered when a command that produces output, such as [1mlist-keys[22m, is executed from a key binding.

     Commands are sent to copy mode using the [1m-X [22mflag to the [1msend-keys [22mcommand.  When a key is pressed, copy mode automatically uses one of two key tables, depending on the [1mmode-keys[0m
     option: [1mcopy-mode [22mfor emacs, or [1mcopy-mode-vi [22mfor vi.  Key tables may be viewed with the [1mlist-keys [22mcommand.

     The following commands are supported in copy mode:

           [1mCommand                              vi              emacs[0m
           append-selection
           append-selection-and-cancel          A
           back-to-indentation                  ^               M-m
           begin-selection                      Space           C-Space
           bottom-line                          L
           cancel                               q               Escape
           clear-selection                      Escape          C-g
           copy-end-of-line                     D               C-k
           copy-line
           copy-pipe <command>
           copy-pipe-and-cancel <command>
           copy-selection
           copy-selection-and-cancel            Enter           M-w
           cursor-down                          j               Down
           cursor-left                          h               Left
           cursor-right                         l               Right
           cursor-up                            k               Up
           end-of-line                          $               C-e
           goto-line <line>                     :               g
           halfpage-down                        C-d             M-Down
           halfpage-down-and-cancel
           halfpage-up                          C-u             M-Up
           history-bottom                       G               M->
           history-top                          g               M-<
           jump-again                           ;               ;
           jump-backward <to>                   F               F
           jump-forward <to>                    f               f
           jump-reverse                         ,               ,
           jump-to-backward <to>                T
           jump-to-forward <to>                 t
           middle-line                          M               M-r
           next-paragraph                       }               M-}
           next-space                           W
           next-space-end                       E
           next-word                            w
           next-word-end                        e               M-f
           other-end                            o
           page-down                            C-f             PageDown
           page-down-and-cancel
           page-up                              C-b             PageUp
           previous-paragraph                   {               M-{
           previous-space                       B
           previous-word                        b               M-b
           rectangle-toggle                     v               R
           scroll-down                          C-e             C-Down
           scroll-down-and-cancel
           scroll-up                            C-y             C-Up
           search-again                         n               n
           search-backward <for>                ?
           search-forward <for>                 /
           search-backward-incremental <for>                    C-r
           search-forward-incremental <for>                     C-s
           search-reverse                       N               N
           select-line                          V
           start-of-line                        0               C-a
           stop-selection
           top-line                             H               M-R

     The â€˜-and-cancelâ€™ variants of some commands exit copy mode after they have completed (for copy commands) or when the cursor reaches the bottom (for scrolling commands).

     The next and previous word keys use space and the â€˜-â€™, â€˜_â€™ and â€˜@â€™ characters as word delimiters by default, but this can be adjusted by setting the [4mword-separators[24m session
     option.  Next word moves to the start of the next word, next word end to the end of the next word and previous word to the start of the previous word.  The three next and previous
     space keys work similarly but use a space alone as the word separator.

     The jump commands enable quick movement within a line.  For instance, typing â€˜fâ€™ followed by â€˜/â€™ will move the cursor to the next â€˜/â€™ character on the current line.  A â€˜;â€™ will
     then jump to the next occurrence.

     Commands in copy mode may be prefaced by an optional repeat count.  With vi key bindings, a prefix is entered using the number keys; with emacs, the Alt (meta) key and a number
     begins prefix entry.

     The synopsis for the [1mcopy-mode [22mcommand is:

     [1mcopy-mode [22m[[1m-Meu[22m] [[1m-t [4m[22mtarget-pane[24m]
             Enter copy mode.  The [1m-u [22moption scrolls one page up.  [1m-M [22mbegins a mouse drag (only valid if bound to a mouse key binding, see [4mMOUSE[24m [4mSUPPORT[24m).  [1m-e [22mspecifies that scrolling
             to the bottom of the history (to the visible screen) should exit copy mode.  While in copy mode, pressing a key other than those used for scrolling will disable this be-
             haviour.  This is intended to allow fast scrolling through a pane's history, for example with:

                   bind PageUp copy-mode -eu

     Each window displayed by [1mtmux [22mmay be split into one or more [4mpanes[24m; each pane takes up a certain area of the display and is a separate terminal.  A window may be split into panes
     using the [1msplit-window [22mcommand.  Windows may be split horizontally (with the [1m-h [22mflag) or vertically.  Panes may be resized with the [1mresize-pane [22mcommand (bound to â€˜C-Upâ€™, â€˜C-Downâ€™
     â€˜C-Leftâ€™ and â€˜C-Rightâ€™ by default), the current pane may be changed with the [1mselect-pane [22mcommand and the [1mrotate-window [22mand [1mswap-pane [22mcommands may be used to swap panes without
     changing their position.  Panes are numbered beginning from zero in the order they are created.

     A number of preset [4mlayouts[24m are available.  These may be selected with the [1mselect-layout [22mcommand or cycled with [1mnext-layout [22m(bound to â€˜Spaceâ€™ by default); once a layout is chosen,
     panes within it may be moved and resized as normal.

     The following layouts are supported:

     [1meven-horizontal[0m
             Panes are spread out evenly from left to right across the window.

     [1meven-vertical[0m
             Panes are spread evenly from top to bottom.

     [1mmain-horizontal[0m
             A large (main) pane is shown at the top of the window and the remaining panes are spread from left to right in the leftover space at the bottom.  Use the [4mmain-pane-height[0m
             window option to specify the height of the top pane.

     [1mmain-vertical[0m
             Similar to [1mmain-horizontal [22mbut the large pane is placed on the left and the others spread from top to bottom along the right.  See the [4mmain-pane-width[24m window option.

     [1mtiled   [22mPanes are spread out as evenly as possible over the window in both rows and columns.

     In addition, [1mselect-layout [22mmay be used to apply a previously used layout - the [1mlist-windows [22mcommand displays the layout of each window in a form suitable for use with
     [1mselect-layout[22m.  For example:

           $ tmux list-windows
           0: ksh [159x48]
               layout: bb62,159x48,0,0{79x48,0,0,79x48,80,0}
           $ tmux select-layout bb62,159x48,0,0{79x48,0,0,79x48,80,0}

     [1mtmux [22mautomatically adjusts the size of the layout for the current window size.  Note that a layout cannot be applied to a window with more panes than that from which the layout
     was originally defined.

     Commands related to windows and panes are as follows:

     [1mbreak-pane [22m[[1m-dP[22m] [[1m-F [4m[22mformat[24m] [[1m-n [4m[22mwindow-name[24m] [[1m-s [4m[22msrc-pane[24m] [[1m-t [4m[22mdst-window[24m]
                   (alias: [1mbreakp[22m)
             Break [4msrc-pane[24m off from its containing window to make it the only pane in [4mdst-window[24m.  If [1m-d [22mis given, the new window does not become the current window.  The [1m-P [22moption
             prints information about the new window after it has been created.  By default, it uses the format â€˜#{session_name}:#{window_index}â€™ but a different format may be speci-
             fied with [1m-F[22m.

     [1mcapture-pane [22m[[1m-aepPqCJ[22m] [[1m-b [4m[22mbuffer-name[24m] [[1m-E [4m[22mend-line[24m] [[1m-S [4m[22mstart-line[24m] [[1m-t [4m[22mtarget-pane[24m]
                   (alias: [1mcapturep[22m)
             Capture the contents of a pane.  If [1m-p [22mis given, the output goes to stdout, otherwise to the buffer specified with [1m-b [22mor a new buffer if omitted.  If [1m-a [22mis given, the
             alternate screen is used, and the history is not accessible.  If no alternate screen exists, an error will be returned unless [1m-q [22mis given.  If [1m-e [22mis given, the output
             includes escape sequences for text and background attributes.  [1m-C [22malso escapes non-printable characters as octal \xxx.  [1m-J [22mjoins wrapped lines and preserves trailing spa-
             ces at each line's end.  [1m-P [22mcaptures only any output that the pane has received that is the beginning of an as-yet incomplete escape sequence.

             [1m-S [22mand [1m-E [22mspecify the starting and ending line numbers, zero is the first line of the visible pane and negative numbers are lines in the history.  â€˜-â€™ to [1m-S [22mis the start
             of the history and to [1m-E [22mthe end of the visible pane.  The default is to capture only the visible contents of the pane.

     [1mchoose-client [22m[[1m-NZ[22m] [[1m-F [4m[22mformat[24m] [[1m-f [4m[22mfilter[24m] [[1m-O [4m[22msort-order[24m] [[1m-t [4m[22mtarget-pane[24m] [[4mtemplate[24m]
             Put a pane into client mode, allowing a client to be selected interactively from a list.  [1m-Z [22mzooms the pane.  The following keys may be used in client mode:

                   [1mKey    Function[0m
                   Enter  Choose selected client
                   Up     Select previous client
                   Down   Select next client
                   C-s    Search by name
                   n      Repeat last search
                   t      Toggle if client is tagged
                   T      Tag no clients
                   C-t    Tag all clients
                   d      Detach selected client
                   D      Detach tagged clients
                   x      Detach and HUP selected client
                   X      Detach and HUP tagged clients
                   z      Suspend selected client
                   Z      Suspend tagged clients
                   f      Enter a format to filter items
                   O      Change sort order
                   v      Toggle preview
                   q      Exit mode

             After a client is chosen, â€˜%%â€™ is replaced by the client name in [4mtemplate[24m and the result executed as a command.  If [4mtemplate[24m is not given, "detach-client -t '%%'" is used.

             [1m-O [22mspecifies the initial sort order: one of â€˜nameâ€™, â€˜sizeâ€™, â€˜creationâ€™, or â€˜activityâ€™.  [1m-f [22mspecifies an initial filter: the filter is a format - if it evaluates to zero,
             the item in the list is not shown, otherwise it is shown.  If a filter would lead to an empty list, it is ignored.  [1m-F [22mspecifies the format for each item in the list.  [1m-N[0m
             starts without the preview.  This command works only if at least one client is attached.

     [1mchoose-tree [22m[[1m-GNswZ[22m] [[1m-F [4m[22mformat[24m] [[1m-f [4m[22mfilter[24m] [[1m-O [4m[22msort-order[24m] [[1m-t [4m[22mtarget-pane[24m] [[4mtemplate[24m]
             Put a pane into tree mode, where a session, window or pane may be chosen interactively from a list.  [1m-s [22mstarts with sessions collapsed and [1m-w [22mwith windows collapsed.  [1m-Z[0m
             zooms the pane.  The following keys may be used in tree mode:

                   [1mKey    Function[0m
                   Enter  Choose selected item
                   Up     Select previous item
                   Down   Select next item
                   <      Scroll list of previews left
                   >      Scroll list of previews right
                   C-s    Search by name
                   n      Repeat last search
                   t      Toggle if item is tagged
                   T      Tag no items
                   C-t    Tag all items
                   :      Run a command for each tagged item
                   f      Enter a format to filter items
                   O      Change sort order
                   v      Toggle preview
                   q      Exit mode

             After a session, window or pane is chosen, â€˜%%â€™ is replaced by the target in [4mtemplate[24m and the result executed as a command.  If [4mtemplate[24m is not given, "switch-client -t
             '%%'" is used.

             [1m-O [22mspecifies the initial sort order: one of â€˜indexâ€™, â€˜nameâ€™, or â€˜timeâ€™.  [1m-f [22mspecifies an initial filter: the filter is a format - if it evaluates to zero, the item in the
             list is not shown, otherwise it is shown.  If a filter would lead to an empty list, it is ignored.  [1m-F [22mspecifies the format for each item in the tree.  [1m-N [22mstarts without
             the preview.  [1m-G [22mincludes all sessions in any session groups in the tree rather than only the first.  This command works only if at least one client is attached.

     [1mdisplay-panes [22m[[1m-d [4m[22mduration[24m] [[1m-t [4m[22mtarget-client[24m] [[4mtemplate[24m]
                   (alias: [1mdisplayp[22m)
             Display a visible indicator of each pane shown by [4mtarget-client[24m.  See the [1mdisplay-panes-colour [22mand [1mdisplay-panes-active-colour [22msession options.  The indicator is closed
             when a key is pressed or [4mduration[24m milliseconds have passed.  If [1m-d [22mis not given, [1mdisplay-panes-time [22mis used.  A duration of zero means the indicator stays until a key is
             pressed.  While the indicator is on screen, a pane may be chosen with the â€˜0â€™ to â€˜9â€™ keys, which will cause [4mtemplate[24m to be executed as a command with â€˜%%â€™ substituted by
             the pane ID.  The default [4mtemplate[24m is "select-pane -t '%%'".

     [1mfind-window [22m[[1m-CNT[22m] [[1m-t [4m[22mtarget-pane[24m] [4mmatch-string[0m
                   (alias: [1mfindw[22m)
             Search for the fnmatch(3) pattern [4mmatch-string[24m in window names, titles, and visible content (but not history).  The flags control matching behavior: [1m-C [22mmatches only visi-
             ble window contents, [1m-N [22mmatches only the window name and [1m-T [22mmatches only the window title.  The default is [1m-CNT[22m.

             This command works only if at least one client is attached.

     [1mjoin-pane [22m[[1m-bdhv[22m] [[1m-l [4m[22msize[24m | [1m-p [4m[22mpercentage[24m] [[1m-s [4m[22msrc-pane[24m] [[1m-t [4m[22mdst-pane[24m]
                   (alias: [1mjoinp[22m)
             Like [1msplit-window[22m, but instead of splitting [4mdst-pane[24m and creating a new pane, split it and move [4msrc-pane[24m into the space.  This can be used to reverse [1mbreak-pane[22m.  The [1m-b[0m
             option causes [4msrc-pane[24m to be joined to left of or above [4mdst-pane[24m.

             If [1m-s [22mis omitted and a marked pane is present (see [1mselect-pane -m[22m), the marked pane is used rather than the current pane.

     [1mkill-pane [22m[[1m-a[22m] [[1m-t [4m[22mtarget-pane[24m]
                   (alias: [1mkillp[22m)
             Destroy the given pane.  If no panes remain in the containing window, it is also destroyed.  The [1m-a [22moption kills all but the pane given with [1m-t[22m.

     [1mkill-window [22m[[1m-a[22m] [[1m-t [4m[22mtarget-window[24m]
                   (alias: [1mkillw[22m)
             Kill the current window or the window at [4mtarget-window[24m, removing it from any sessions to which it is linked.  The [1m-a [22moption kills all but the window given with [1m-t[22m.

     [1mlast-pane [22m[[1m-de[22m] [[1m-t [4m[22mtarget-window[24m]
                   (alias: [1mlastp[22m)
             Select the last (previously selected) pane.  [1m-e [22menables or [1m-d [22mdisables input to the pane.

     [1mlast-window [22m[[1m-t [4m[22mtarget-session[24m]
                   (alias: [1mlast[22m)
             Select the last (previously selected) window.  If no [4mtarget-session[24m is specified, select the last window of the current session.

     [1mlink-window [22m[[1m-adk[22m] [[1m-s [4m[22msrc-window[24m] [[1m-t [4m[22mdst-window[24m]
                   (alias: [1mlinkw[22m)
             Link the window at [4msrc-window[24m to the specified [4mdst-window[24m.  If [4mdst-window[24m is specified and no such window exists, the [4msrc-window[24m is linked there.  With [1m-a[22m, the window is
             moved to the next index up (following windows are moved if necessary).  If [1m-k [22mis given and [4mdst-window[24m exists, it is killed, otherwise an error is generated.  If [1m-d [22mis
             given, the newly linked window is not selected.

     [1mlist-panes [22m[[1m-as[22m] [[1m-F [4m[22mformat[24m] [[1m-t [4m[22mtarget[24m]
                   (alias: [1mlsp[22m)
             If [1m-a [22mis given, [4mtarget[24m is ignored and all panes on the server are listed.  If [1m-s [22mis given, [4mtarget[24m is a session (or the current session).  If neither is given, [4mtarget[24m is a
             window (or the current window).  For the meaning of the [1m-F [22mflag, see the [4mFORMATS[24m section.

     [1mlist-windows [22m[[1m-a[22m] [[1m-F [4m[22mformat[24m] [[1m-t [4m[22mtarget-session[24m]
                   (alias: [1mlsw[22m)
             If [1m-a [22mis given, list all windows on the server.  Otherwise, list windows in the current session or in [4mtarget-session[24m.  For the meaning of the [1m-F [22mflag, see the [4mFORMATS[24m sec-
             tion.

     [1mmove-pane [22m[[1m-bdhv[22m] [[1m-l [4m[22msize[24m | [1m-p [4m[22mpercentage[24m] [[1m-s [4m[22msrc-pane[24m] [[1m-t [4m[22mdst-pane[24m]
                   (alias: [1mmovep[22m)
             Like [1mjoin-pane[22m, but [4msrc-pane[24m and [4mdst-pane[24m may belong to the same window.

     [1mmove-window [22m[[1m-ardk[22m] [[1m-s [4m[22msrc-window[24m] [[1m-t [4m[22mdst-window[24m]
                   (alias: [1mmovew[22m)
             This is similar to [1mlink-window[22m, except the window at [4msrc-window[24m is moved to [4mdst-window[24m.  With [1m-r[22m, all windows in the session are renumbered in sequential order, respecting
             the [1mbase-index [22moption.

     [1mnew-window [22m[[1m-adkP[22m] [[1m-c [4m[22mstart-directory[24m] [[1m-F [4m[22mformat[24m] [[1m-n [4m[22mwindow-name[24m] [[1m-t [4m[22mtarget-window[24m] [[4mshell-command[24m]
                   (alias: [1mneww[22m)
             Create a new window.  With [1m-a[22m, the new window is inserted at the next index up from the specified [4mtarget-window[24m, moving windows up if necessary, otherwise [4mtarget-window[24m is
             the new window location.

             If [1m-d [22mis given, the session does not make the new window the current window.  [4mtarget-window[24m represents the window to be created; if the target already exists an error is
             shown, unless the [1m-k [22mflag is used, in which case it is destroyed.  [4mshell-command[24m is the command to execute.  If [4mshell-command[24m is not specified, the value of the
             [1mdefault-command [22moption is used.  [1m-c [22mspecifies the working directory in which the new window is created.

             When the shell command completes, the window closes.  See the [1mremain-on-exit [22moption to change this behaviour.

             The TERM environment variable must be set to â€˜screenâ€™ or â€˜tmuxâ€™ for all programs running [4minside[24m [1mtmux[22m.  New windows will automatically have â€˜TERM=screenâ€™ added to their
             environment, but care must be taken not to reset this in shell start-up files.

             The [1m-P [22moption prints information about the new window after it has been created.  By default, it uses the format â€˜#{session_name}:#{window_index}â€™ but a different format
             may be specified with [1m-F[22m.

     [1mnext-layout [22m[[1m-t [4m[22mtarget-window[24m]
                   (alias: [1mnextl[22m)
             Move a window to the next layout and rearrange the panes to fit.

     [1mnext-window [22m[[1m-a[22m] [[1m-t [4m[22mtarget-session[24m]
                   (alias: [1mnext[22m)
             Move to the next window in the session.  If [1m-a [22mis used, move to the next window with an alert.

     [1mpipe-pane [22m[[1m-IOo[22m] [[1m-t [4m[22mtarget-pane[24m] [[4mshell-command[24m]
                   (alias: [1mpipep[22m)
             Pipe output sent by the program in [4mtarget-pane[24m to a shell command or vice versa.  A pane may only be connected to one command at a time, any existing pipe is closed before
             [4mshell-command[24m is executed.  The [4mshell-command[24m string may contain the special character sequences supported by the [1mstatus-left [22moption.  If no [4mshell-command[24m is given, the
             current pipe (if any) is closed.

             [1m-I [22mand [1m-O [22mspecify which of the [4mshell-command[24m output streams are connected to the pane: with [1m-I [22mstdout is connected (so anything [4mshell-command[24m prints is written to the pane
             as if it were typed); with [1m-O [22mstdin is connected (so any output in the pane is piped to [4mshell-command[24m).  Both may be used together and if neither are specified, [1m-O [22mis
             used.

             The [1m-o [22moption only opens a new pipe if no previous pipe exists, allowing a pipe to be toggled with a single key, for example:

                   bind-key C-p pipe-pane -o 'cat >>~/output.#I-#P'

     [1mprevious-layout [22m[[1m-t [4m[22mtarget-window[24m]
                   (alias: [1mprevl[22m)
             Move to the previous layout in the session.

     [1mprevious-window [22m[[1m-a[22m] [[1m-t [4m[22mtarget-session[24m]
                   (alias: [1mprev[22m)
             Move to the previous window in the session.  With [1m-a[22m, move to the previous window with an alert.

     [1mrename-window [22m[[1m-t [4m[22mtarget-window[24m] [4mnew-name[0m
                   (alias: [1mrenamew[22m)
             Rename the current window, or the window at [4mtarget-window[24m if specified, to [4mnew-name[24m.

     [1mresize-pane [22m[[1m-DLMRUZ[22m] [[1m-t [4m[22mtarget-pane[24m] [[1m-x [4m[22mwidth[24m] [[1m-y [4m[22mheight[24m] [[4madjustment[24m]
                   (alias: [1mresizep[22m)
             Resize a pane, up, down, left or right by [4madjustment[24m with [1m-U[22m, [1m-D[22m, [1m-L [22mor [1m-R[22m, or to an absolute size with [1m-x [22mor [1m-y[22m.  The [4madjustment[24m is given in lines or cells (the default
             is 1).

             With [1m-Z[22m, the active pane is toggled between zoomed (occupying the whole of the window) and unzoomed (its normal position in the layout).

             [1m-M [22mbegins mouse resizing (only valid if bound to a mouse key binding, see [4mMOUSE[24m [4mSUPPORT[24m).

     [1mrespawn-pane [22m[[1m-c [4m[22mstart-directory[24m] [[1m-k[22m] [[1m-t [4m[22mtarget-pane[24m] [[4mshell-command[24m]
                   (alias: [1mrespawnp[22m)
             Reactivate a pane in which the command has exited (see the [1mremain-on-exit [22mwindow option).  If [4mshell-command[24m is not given, the command used when the pane was created is
             executed.  The pane must be already inactive, unless [1m-k [22mis given, in which case any existing command is killed.  [1m-c [22mspecifies a new working directory for the pane.

     [1mrespawn-window [22m[[1m-c [4m[22mstart-directory[24m] [[1m-k[22m] [[1m-t [4m[22mtarget-window[24m] [[4mshell-command[24m]
                   (alias: [1mrespawnw[22m)
             Reactivate a window in which the command has exited (see the [1mremain-on-exit [22mwindow option).  If [4mshell-command[24m is not given, the command used when the window was created is
             executed.  The window must be already inactive, unless [1m-k [22mis given, in which case any existing command is killed.  [1m-c [22mspecifies a new working directory for the window.

     [1mrotate-window [22m[[1m-DU[22m] [[1m-t [4m[22mtarget-window[24m]
                   (alias: [1mrotatew[22m)
             Rotate the positions of the panes within a window, either upward (numerically lower) with [1m-U [22mor downward (numerically higher).

     [1mselect-layout [22m[[1m-Enop[22m] [[1m-t [4m[22mtarget-pane[24m] [[4mlayout-name[24m]
                   (alias: [1mselectl[22m)
             Choose a specific layout for a window.  If [4mlayout-name[24m is not given, the last preset layout used (if any) is reapplied.  [1m-n [22mand [1m-p [22mare equivalent to the [1mnext-layout [22mand
             [1mprevious-layout [22mcommands.  [1m-o [22mapplies the last set layout if possible (undoes the most recent layout change).  [1m-E [22mspreads the current pane and any panes next to it out
             evenly.

     [1mselect-pane [22m[[1m-DdegLlMmRU[22m] [[1m-P [4m[22mstyle[24m] [[1m-T [4m[22mtitle[24m] [[1m-t [4m[22mtarget-pane[24m]
                   (alias: [1mselectp[22m)
             Make pane [4mtarget-pane[24m the active pane in window [4mtarget-window[24m, or set its style (with [1m-P[22m).  If one of [1m-D[22m, [1m-L[22m, [1m-R[22m, or [1m-U [22mis used, respectively the pane below, to the left,
             to the right, or above the target pane is used.  [1m-l [22mis the same as using the [1mlast-pane [22mcommand.  [1m-e [22menables or [1m-d [22mdisables input to the pane.

             [1m-m [22mand [1m-M [22mare used to set and clear the [4mmarked[24m [4mpane[24m.  There is one marked pane at a time, setting a new marked pane clears the last.  The marked pane is the default target
             for [1m-s [22mto [1mjoin-pane[22m, [1mswap-pane [22mand [1mswap-window[22m.

             Each pane has a style: by default the [1mwindow-style [22mand [1mwindow-active-style [22moptions are used, [1mselect-pane -P [22msets the style for a single pane.  For example, to set the pane
             1 background to red:

                   select-pane -t:.1 -P 'bg=red'

             [1m-g [22mshows the current pane style.

             [1m-T [22msets the pane title.

     [1mselect-window [22m[[1m-lnpT[22m] [[1m-t [4m[22mtarget-window[24m]
                   (alias: [1mselectw[22m)
             Select the window at [4mtarget-window[24m.  [1m-l[22m, [1m-n [22mand [1m-p [22mare equivalent to the [1mlast-window[22m, [1mnext-window [22mand [1mprevious-window [22mcommands.  If [1m-T [22mis given and the selected window is
             already the current window, the command behaves like [1mlast-window[22m.

     [1msplit-window [22m[[1m-bdfhvP[22m] [[1m-c [4m[22mstart-directory[24m] [[1m-l [4m[22msize[24m | [1m-p [4m[22mpercentage[24m] [[1m-t [4m[22mtarget-pane[24m] [[4mshell-command[24m] [[1m-F [4m[22mformat[24m]
                   (alias: [1msplitw[22m)
             Create a new pane by splitting [4mtarget-pane[24m: [1m-h [22mdoes a horizontal split and [1m-v [22ma vertical split; if neither is specified, [1m-v [22mis assumed.  The [1m-l [22mand [1m-p [22moptions specify the
             size of the new pane in lines (for vertical split) or in cells (for horizontal split), or as a percentage, respectively.  The [1m-b [22moption causes the new pane to be created
             to the left of or above [4mtarget-pane[24m.  The [1m-f [22moption creates a new pane spanning the full window height (with [1m-h[22m) or full window width (with [1m-v[22m), instead of splitting the
             active pane.  All other options have the same meaning as for the [1mnew-window [22mcommand.

     [1mswap-pane [22m[[1m-dDU[22m] [[1m-s [4m[22msrc-pane[24m] [[1m-t [4m[22mdst-pane[24m]
                   (alias: [1mswapp[22m)
             Swap two panes.  If [1m-U [22mis used and no source pane is specified with [1m-s[22m, [4mdst-pane[24m is swapped with the previous pane (before it numerically); [1m-D [22mswaps with the next pane
             (after it numerically).  [1m-d [22minstructs [1mtmux [22mnot to change the active pane.

             If [1m-s [22mis omitted and a marked pane is present (see [1mselect-pane -m[22m), the marked pane is used rather than the current pane.

     [1mswap-window [22m[[1m-d[22m] [[1m-s [4m[22msrc-window[24m] [[1m-t [4m[22mdst-window[24m]
                   (alias: [1mswapw[22m)
             This is similar to [1mlink-window[22m, except the source and destination windows are swapped.  It is an error if no window exists at [4msrc-window[24m.

             Like [1mswap-pane[22m, if [1m-s [22mis omitted and a marked pane is present (see [1mselect-pane -m[22m), the window containing the marked pane is used rather than the current window.

     [1munlink-window [22m[[1m-k[22m] [[1m-t [4m[22mtarget-window[24m]
                   (alias: [1munlinkw[22m)
             Unlink [4mtarget-window[24m.  Unless [1m-k [22mis given, a window may be unlinked only if it is linked to multiple sessions - windows may not be linked to no sessions; if [1m-k [22mis speci-
             fied and the window is linked to only one session, it is unlinked and destroyed.

[1mKEY BINDINGS[0m
     [1mtmux [22mallows a command to be bound to most keys, with or without a prefix key.  When specifying keys, most represent themselves (for example â€˜Aâ€™ to â€˜Zâ€™).  Ctrl keys may be prefixed
     with â€˜C-â€™ or â€˜^â€™, and Alt (meta) with â€˜M-â€™.  In addition, the following special key names are accepted: [4mUp[24m, [4mDown[24m, [4mLeft[24m, [4mRight[24m, [4mBSpace[24m, [4mBTab[24m, [4mDC[24m (Delete), [4mEnd[24m, [4mEnter[24m, [4mEscape[24m, [4mF1[24m to
     [4mF12[24m, [4mHome[24m, [4mIC[24m (Insert), [4mNPage/PageDown/PgDn[24m, [4mPPage/PageUp/PgUp[24m, [4mSpace[24m, and [4mTab[24m.  Note that to bind the â€˜"â€™ or â€˜'â€™ keys, quotation marks are necessary, for example:

           bind-key '"' split-window
           bind-key "'" new-window

     Commands related to key bindings are as follows:

     [1mbind-key [22m[[1m-nr[22m] [[1m-T [4m[22mkey-table[24m] [4mkey[24m [4mcommand[24m [[4marguments[24m]
                   (alias: [1mbind[22m)
             Bind key [4mkey[24m to [4mcommand[24m.  Keys are bound in a key table.  By default (without -T), the key is bound in the [4mprefix[24m key table.  This table is used for keys pressed after the
             prefix key (for example, by default â€˜câ€™ is bound to [1mnew-window [22min the [4mprefix[24m table, so â€˜C-b câ€™ creates a new window).  The [4mroot[24m table is used for keys pressed without the
             prefix key: binding â€˜câ€™ to [1mnew-window [22min the [4mroot[24m table (not recommended) means a plain â€˜câ€™ will create a new window.  [1m-n [22mis an alias for [1m-T [4m[22mroot[24m.  Keys may also be bound
             in custom key tables and the [1mswitch-client -T [22mcommand used to switch to them from a key binding.  The [1m-r [22mflag indicates this key may repeat, see the [1mrepeat-time [22moption.

             To view the default bindings and possible commands, see the [1mlist-keys [22mcommand.

     [1mlist-keys [22m[[1m-T [4m[22mkey-table[24m]
                   (alias: [1mlsk[22m)
             List all key bindings.  Without [1m-T [22mall key tables are printed.  With [1m-T [22monly [4mkey-table[24m.

     [1msend-keys [22m[[1m-lMRX[22m] [[1m-N [4m[22mrepeat-count[24m] [[1m-t [4m[22mtarget-pane[24m] [4mkey[24m [4m...[0m
                   (alias: [1msend[22m)
             Send a key or keys to a window.  Each argument [4mkey[24m is the name of the key (such as â€˜C-aâ€™ or â€˜NPageâ€™) to send; if the string is not recognised as a key, it is sent as a
             series of characters.  The [1m-l [22mflag disables key name lookup and sends the keys literally.  All arguments are sent sequentially from first to last.  The [1m-R [22mflag causes the
             terminal state to be reset.

             [1m-M [22mpasses through a mouse event (only valid if bound to a mouse key binding, see [4mMOUSE[24m [4mSUPPORT[24m).

             [1m-X [22mis used to send a command into copy mode - see the [4mWINDOWS[24m [4mAND[24m [4mPANES[24m section.  [1m-N [22mspecifies a repeat count.

     [1msend-prefix [22m[[1m-2[22m] [[1m-t [4m[22mtarget-pane[24m]
             Send the prefix key, or with [1m-2 [22mthe secondary prefix key, to a window as if it was pressed.

     [1munbind-key [22m[[1m-an[22m] [[1m-T [4m[22mkey-table[24m] [4mkey[0m
                   (alias: [1munbind[22m)
             Unbind the command bound to [4mkey[24m.  [1m-n [22mand [1m-T [22mare the same as for [1mbind-key[22m.  If [1m-a [22mis present, all key bindings are removed.

[1mOPTIONS[0m
     The appearance and behaviour of [1mtmux [22mmay be modified by changing the value of various options.  There are three types of option: [4mserver[24m [4moptions[24m, [4msession[24m [4moptions[24m and [4mwindow[0m
     [4moptions[24m.

     The [1mtmux [22mserver has a set of global options which do not apply to any particular window or session.  These are altered with the [1mset-option -s [22mcommand, or displayed with the
     [1mshow-options -s [22mcommand.

     In addition, each individual session may have a set of session options, and there is a separate set of global session options.  Sessions which do not have a particular option con-
     figured inherit the value from the global session options.  Session options are set or unset with the [1mset-option [22mcommand and may be listed with the [1mshow-options [22mcommand.  The
     available server and session options are listed under the [1mset-option [22mcommand.

     Similarly, a set of window options is attached to each window, and there is a set of global window options from which any unset options are inherited.  Window options are altered
     with the [1mset-window-option [22mcommand and can be listed with the [1mshow-window-options [22mcommand.  All window options are documented with the [1mset-window-option [22mcommand.

     [1mtmux [22malso supports user options which are prefixed with a â€˜@â€™.  User options may have any name, so long as they are prefixed with â€˜@â€™, and be set to any string.  For example:

           $ tmux setw -q @foo "abc123"
           $ tmux showw -v @foo
           abc123

     Commands which set options are as follows:

     [1mset-option [22m[[1m-aFgoqsuw[22m] [[1m-t [4m[22mtarget-session[24m | [4mtarget-window[24m] [4moption[24m [4mvalue[0m
                   (alias: [1mset[22m)
             Set a window option with [1m-w [22m(equivalent to the [1mset-window-option [22mcommand), a server option with [1m-s[22m, otherwise a session option.  If [1m-g [22mis given, the global session or win-
             dow option is set.  [1m-F [22mexpands formats in the option value.  The [1m-u [22mflag unsets an option, so a session inherits the option from the global options (or with [1m-g[22m, restores a
             global option to the default).

             The [1m-o [22mflag prevents setting an option that is already set and the [1m-q [22mflag suppresses errors about unknown or ambiguous options.

             With [1m-a[22m, and if the option expects a string or a style, [4mvalue[24m is appended to the existing setting.  For example:

                   set -g status-left "foo"
                   set -ag status-left "bar"

             Will result in â€˜foobarâ€™.  And:

                   set -g status-style "bg=red"
                   set -ag status-style "fg=blue"

             Will result in a red background [4mand[24m blue foreground.  Without [1m-a[22m, the result would be the default background and a blue foreground.

             Available window options are listed under [1mset-window-option[22m.

             [4mvalue[24m depends on the option and may be a number, a string, or a flag (on, off, or omitted to toggle).

             Available server options are:

             [1mbuffer-limit [4m[22mnumber[0m
                     Set the number of buffers; as new buffers are added to the top of the stack, old ones are removed from the bottom if necessary to maintain this maximum length.

             [1mcommand-alias[] [4m[22mname=value[0m
                     This is an array of custom aliases for commands.  If an unknown command matches [4mname[24m, it is replaced with [4mvalue[24m.  For example, after:

                           set -s command-alias[100] zoom='resize-pane -Z'

                     Using:

                           zoom -t:.1

                     Is equivalent to:

                           resize-pane -Z -t:.1

                     Note that aliases are expanded when a command is parsed rather than when it is executed, so binding an alias with [1mbind-key [22mwill bind the expanded form.

             [1mdefault-terminal [4m[22mterminal[0m
                     Set the default terminal for new windows created in this session - the default value of the TERM environment variable.  For [1mtmux [22mto work correctly, this [4mmust[24m be
                     set to â€˜screenâ€™, â€˜tmuxâ€™ or a derivative of them.

             [1mescape-time [4m[22mtime[0m
                     Set the time in milliseconds for which [1mtmux [22mwaits after an escape is input to determine if it is part of a function or meta key sequences.  The default is 500 mil-
                     liseconds.

             [1mexit-empty [22m[[1mon [22m| [1moff[22m]
                     If enabled (the default), the server will exit when there are no active sessions.

             [1mexit-unattached [22m[[1mon [22m| [1moff[22m]
                     If enabled, the server will exit when there are no attached clients.

             [1mfocus-events [22m[[1mon [22m| [1moff[22m]
                     When enabled, focus events are requested from the terminal if supported and passed through to applications running in [1mtmux[22m.  Attached clients should be detached
                     and attached again after changing this option.

             [1mhistory-file [4m[22mpath[0m
                     If not empty, a file to which [1mtmux [22mwill write command prompt history on exit and load it from on start.

             [1mmessage-limit [4m[22mnumber[0m
                     Set the number of error or information messages to save in the message log for each client.  The default is 100.

             [1mset-clipboard [22m[[1mon [22m| [1mexternal [22m| [1moff[22m]
                     Attempt to set the terminal clipboard content using the xterm(1) escape sequence, if there is an [4mMs[24m entry in the terminfo(5) description (see the [4mTERMINFO[0m
                     [4mEXTENSIONS[24m section).

                     If set to [1mon[22m, [1mtmux [22mwill both accept the escape sequence to create a buffer and attempt to set the terminal clipboard.  If set to [1mexternal[22m, [1mtmux [22mwill attempt to set
                     the terminal clipboard but ignore attempts by applications to set [1mtmux [22mbuffers.  If [1moff[22m, [1mtmux [22mwill neither accept the clipboard escape sequence nor attempt to set
                     the clipboard.

                     Note that this feature needs to be enabled in xterm(1) by setting the resource:

                           disallowedWindowOps: 20,21,SetXprop

                     Or changing this property from the xterm(1) interactive menu when required.

             [1mterminal-overrides[] [4m[22mstring[0m
                     Allow terminal descriptions read using terminfo(5) to be overridden.  Each entry is a colon-separated string made up of a terminal type pattern (matched using
                     fnmatch(3)) and a set of [4mname=value[24m entries.

                     For example, to set the â€˜clearâ€™ terminfo(5) entry to â€˜\e[H\e[2Jâ€™ for all terminal types matching â€˜rxvt*â€™:

                           rxvt*:clear=\e[H\e[2J

                     The terminal entry value is passed through strunvis(3) before interpretation.

             Available session options are:

             [1mactivity-action [22m[[1many [22m| [1mnone [22m| [1mcurrent [22m| [1mother[22m]
                     Set action on window activity when [1mmonitor-activity [22mis on.  [1many [22mmeans activity in any window linked to a session causes a bell or message (depending on
                     [1mvisual-activity[22m) in the current window of that session, [1mnone [22mmeans all activity is ignored (equivalent to [1mmonitor-activity [22mbeing off), [1mcurrent [22mmeans only activity
                     in windows other than the current window are ignored and [1mother [22mmeans activity in the current window is ignored but not those in other windows.

             [1massume-paste-time [4m[22mmilliseconds[0m
                     If keys are entered faster than one in [4mmilliseconds[24m, they are assumed to have been pasted rather than typed and [1mtmux [22mkey bindings are not processed.  The default
                     is one millisecond and zero disables.

             [1mbase-index [4m[22mindex[0m
                     Set the base index from which an unused index should be searched when a new window is created.  The default is zero.

             [1mbell-action [22m[[1many [22m| [1mnone [22m| [1mcurrent [22m| [1mother[22m]
                     Set action on a bell in a window when [1mmonitor-bell [22mis on.  The values are the same as those for [1mactivity-action[22m.

             [1mdefault-command [4m[22mshell-command[0m
                     Set the command used for new windows (if not specified when the window is created) to [4mshell-command[24m, which may be any sh(1) command.  The default is an empty
                     string, which instructs [1mtmux [22mto create a login shell using the value of the [1mdefault-shell [22moption.

             [1mdefault-shell [4m[22mpath[0m
                     Specify the default shell.  This is used as the login shell for new windows when the [1mdefault-command [22moption is set to empty, and must be the full path of the exe-
                     cutable.  When started [1mtmux [22mtries to set a default value from the first suitable of the SHELL environment variable, the shell returned by getpwuid(3), or [4m/bin/sh[24m.
                     This option should be configured when [1mtmux [22mis used as a login shell.

             [1mdestroy-unattached [22m[[1mon [22m| [1moff[22m]
                     If enabled and the session is no longer attached to any clients, it is destroyed.

             [1mdetach-on-destroy [22m[[1mon [22m| [1moff[22m]
                     If on (the default), the client is detached when the session it is attached to is destroyed.  If off, the client is switched to the most recently active of the
                     remaining sessions.

             [1mdisplay-panes-active-colour [4m[22mcolour[0m
                     Set the colour used by the [1mdisplay-panes [22mcommand to show the indicator for the active pane.

             [1mdisplay-panes-colour [4m[22mcolour[0m
                     Set the colour used by the [1mdisplay-panes [22mcommand to show the indicators for inactive panes.

             [1mdisplay-panes-time [4m[22mtime[0m
                     Set the time in milliseconds for which the indicators shown by the [1mdisplay-panes [22mcommand appear.

             [1mdisplay-time [4m[22mtime[0m
                     Set the amount of time for which status line messages and other on-screen indicators are displayed.  If set to 0, messages and indicators are displayed until a key
                     is pressed.  [4mtime[24m is in milliseconds.

             [1mhistory-limit [4m[22mlines[0m
                     Set the maximum number of lines held in window history.  This setting applies only to new windows - existing window histories are not resized and retain the limit
                     at the point they were created.

             [1mkey-table [4m[22mkey-table[0m
                     Set the default key table to [4mkey-table[24m instead of [4mroot[24m.

             [1mlock-after-time [4m[22mnumber[0m
                     Lock the session (like the [1mlock-session [22mcommand) after [4mnumber[24m seconds of inactivity.  The default is not to lock (set to 0).

             [1mlock-command [4m[22mshell-command[0m
                     Command to run when locking each client.  The default is to run lock(1) with [1m-np[22m.

             [1mmessage-command-style [4m[22mstyle[0m
                     Set status line message command style, where [4mstyle[24m is a comma-separated list of characteristics to be specified.

                     These may be â€˜bg=colourâ€™ to set the background colour, â€˜fg=colourâ€™ to set the foreground colour, and a list of attributes as specified below.

                     The colour is one of: [1mblack[22m, [1mred[22m, [1mgreen[22m, [1myellow[22m, [1mblue[22m, [1mmagenta[22m, [1mcyan[22m, [1mwhite[22m, aixterm bright variants (if supported: [1mbrightred[22m, [1mbrightgreen[22m, and so on), [1mcolour0 [22mto
                     [1mcolour255 [22mfrom the 256-colour set, [1mdefault[22m, or a hexadecimal RGB string such as â€˜#ffffffâ€™, which chooses the closest match from the default 256-colour set.

                     The attributes is either [1mnone [22mor a comma-delimited list of one or more of: [1mbright [22m(or [1mbold[22m), [1mdim[22m, [1munderscore[22m, [1mblink[22m, [1mreverse[22m, [1mhidden[22m, [1mitalics[22m, or [1mstrikethrough [22mto
                     turn an attribute on, or an attribute prefixed with â€˜noâ€™ to turn one off.

                     Examples are:

                           fg=yellow,bold,underscore,blink
                           bg=black,fg=default,noreverse

                     With the [1m-a [22mflag to the [1mset-option [22mcommand the new style is added otherwise the existing style is replaced.

             [1mmessage-style [4m[22mstyle[0m
                     Set status line message style.  For how to specify [4mstyle[24m, see the [1mmessage-command-style [22moption.

             [1mmouse [22m[[1mon [22m| [1moff[22m]
                     If on, [1mtmux [22mcaptures the mouse and allows mouse events to be bound as key bindings.  See the [4mMOUSE[24m [4mSUPPORT[24m section for details.

             [1mprefix [4m[22mkey[0m
                     Set the key accepted as a prefix key.  In addition to the standard keys described under [4mKEY[24m [4mBINDINGS[24m, [1mprefix [22mcan be set to the special key â€˜Noneâ€™ to set no prefix.

             [1mprefix2 [4m[22mkey[0m
                     Set a secondary key accepted as a prefix key.  Like [1mprefix[22m, [1mprefix2 [22mcan be set to â€˜Noneâ€™.

             [1mrenumber-windows [22m[[1mon [22m| [1moff[22m]
                     If on, when a window is closed in a session, automatically renumber the other windows in numerical order.  This respects the [1mbase-index [22moption if it has been set.
                     If off, do not renumber the windows.

             [1mrepeat-time [4m[22mtime[0m
                     Allow multiple commands to be entered without pressing the prefix-key again in the specified [4mtime[24m milliseconds (the default is 500).  Whether a key repeats may be
                     set when it is bound using the [1m-r [22mflag to [1mbind-key[22m.  Repeat is enabled for the default keys bound to the [1mresize-pane [22mcommand.

             [1mset-titles [22m[[1mon [22m| [1moff[22m]
                     Attempt to set the client terminal title using the [4mtsl[24m and [4mfsl[24m terminfo(5) entries if they exist.  [1mtmux [22mautomatically sets these to the \e]0;...\007 sequence if
                     the terminal appears to be xterm(1).  This option is off by default.

             [1mset-titles-string [4m[22mstring[0m
                     String used to set the window title if [1mset-titles [22mis on.  Formats are expanded, see the [4mFORMATS[24m section.

             [1msilence-action [22m[[1many [22m| [1mnone [22m| [1mcurrent [22m| [1mother[22m]
                     Set action on window silence when [1mmonitor-silence [22mis on.  The values are the same as those for [1mactivity-action[22m.

             [1mstatus [22m[[1mon [22m| [1moff[22m]
                     Show or hide the status line.

             [1mstatus-interval [4m[22minterval[0m
                     Update the status line every [4minterval[24m seconds.  By default, updates will occur every 15 seconds.  A setting of zero disables redrawing at interval.

             [1mstatus-justify [22m[[1mleft [22m| [1mcentre [22m| [1mright[22m]
                     Set the position of the window list component of the status line: left, centre or right justified.

             [1mstatus-keys [22m[[1mvi [22m| [1memacs[22m]
                     Use vi or emacs-style key bindings in the status line, for example at the command prompt.  The default is emacs, unless the VISUAL or EDITOR environment variables
                     are set and contain the string â€˜viâ€™.

             [1mstatus-left [4m[22mstring[0m
                     Display [4mstring[24m (by default the session name) to the left of the status line.  [4mstring[24m will be passed through strftime(3) and formats (see [4mFORMATS[24m) will be expanded.
                     It may also contain the special character sequence #[] to change the colour or attributes, for example â€˜#[fg=red,bright]â€™ to set a bright red foreground.  See the
                     [1mmessage-command-style [22moption for a description of colours and attributes.

                     For details on how the names and titles can be set see the [4mNAMES[24m [4mAND[24m [4mTITLES[24m section.

                     Examples are:

                           #(sysctl vm.loadavg)
                           #[fg=yellow,bold]#(apm -l)%%#[default] [#S]

                     The default is â€˜[#S] â€™.

             [1mstatus-left-length [4m[22mlength[0m
                     Set the maximum [4mlength[24m of the left component of the status line.  The default is 10.

             [1mstatus-left-style [4m[22mstyle[0m
                     Set the style of the left part of the status line.  For how to specify [4mstyle[24m, see the [1mmessage-command-style [22moption.

             [1mstatus-position [22m[[1mtop [22m| [1mbottom[22m]
                     Set the position of the status line.

             [1mstatus-right [4m[22mstring[0m
                     Display [4mstring[24m to the right of the status line.  By default, the current pane title in double quotes, the date and the time are shown.  As with [1mstatus-left[22m, [4mstring[0m
                     will be passed to strftime(3) and character pairs are replaced.

             [1mstatus-right-length [4m[22mlength[0m
                     Set the maximum [4mlength[24m of the right component of the status line.  The default is 40.

             [1mstatus-right-style [4m[22mstyle[0m
                     Set the style of the right part of the status line.  For how to specify [4mstyle[24m, see the [1mmessage-command-style [22moption.

             [1mstatus-style [4m[22mstyle[0m
                     Set status line style.  For how to specify [4mstyle[24m, see the [1mmessage-command-style [22moption.

             [1mupdate-environment[] [4m[22mvariable[0m
                     Set list of environment variables to be copied into the session environment when a new session is created or an existing session is attached.  Any variables that
                     do not exist in the source environment are set to be removed from the session environment (as if [1m-r [22mwas given to the [1mset-environment [22mcommand).

             [1muser-keys[] [4m[22mkey[0m
                     Set list of user-defined key escape sequences.  Each item is associated with a key named â€˜User0â€™, â€˜User1â€™, and so on.

                     For example:

                           set -s user-keys[0] "\e[5;30012~"
                           bind User0 resize-pane -L 3

             [1mvisual-activity [22m[[1mon [22m| [1moff [22m| [1mboth[22m]
                     If on, display a message instead of sending a bell when activity occurs in a window for which the [1mmonitor-activity [22mwindow option is enabled.  If set to both, a
                     bell and a message are produced.

             [1mvisual-bell [22m[[1mon [22m| [1moff [22m| [1mboth[22m]
                     If on, a message is shown on a bell in a window for which the [1mmonitor-bell [22mwindow option is enabled instead of it being passed through to the terminal (which nor-
                     mally makes a sound).  If set to both, a bell and a message are produced.  Also see the [1mbell-action [22moption.

             [1mvisual-silence [22m[[1mon [22m| [1moff [22m| [1mboth[22m]
                     If [1mmonitor-silence [22mis enabled, prints a message after the interval has expired on a given window instead of sending a bell.  If set to both, a bell and a message
                     are produced.

             [1mword-separators [4m[22mstring[0m
                     Sets the session's conception of what characters are considered word separators, for the purposes of the next and previous word commands in copy mode.  The default
                     is â€˜ -_@â€™.

     [1mset-window-option [22m[[1m-aFgoqu[22m] [[1m-t [4m[22mtarget-window[24m] [4moption[24m [4mvalue[0m
                   (alias: [1msetw[22m)
             Set a window option.  The [1m-a[22m, [1m-F[22m, [1m-g[22m, [1m-o[22m, [1m-q [22mand [1m-u [22mflags work similarly to the [1mset-option [22mcommand.

             Supported window options are:

             [1maggressive-resize [22m[[1mon [22m| [1moff[22m]
                     Aggressively resize the chosen window.  This means that [1mtmux [22mwill resize the window to the size of the smallest session for which it is the current window, rather
                     than the smallest session to which it is attached.  The window may resize when the current window is changed on another sessions; this option is good for full-
                     screen programs which support SIGWINCH and poor for interactive programs such as shells.

             [1mallow-rename [22m[[1mon [22m| [1moff[22m]
                     Allow programs to change the window name using a terminal escape sequence (\ek...\e\\).  The default is off.

             [1malternate-screen [22m[[1mon [22m| [1moff[22m]
                     This option configures whether programs running inside [1mtmux [22mmay use the terminal alternate screen feature, which allows the [4msmcup[24m and [4mrmcup[24m terminfo(5) capabili-
                     ties.  The alternate screen feature preserves the contents of the window when an interactive application starts and restores it on exit, so that any output visible
                     before the application starts reappears unchanged after it exits.  The default is on.

             [1mautomatic-rename [22m[[1mon [22m| [1moff[22m]
                     Control automatic window renaming.  When this setting is enabled, [1mtmux [22mwill rename the window automatically using the format specified by [1mautomatic-rename-format[22m.
                     This flag is automatically disabled for an individual window when a name is specified at creation with [1mnew-window [22mor [1mnew-session[22m, or later with [1mrename-window[22m, or
                     with a terminal escape sequence.  It may be switched off globally with:

                           set-window-option -g automatic-rename off

             [1mautomatic-rename-format [4m[22mformat[0m
                     The format (see [4mFORMATS[24m) used when the [1mautomatic-rename [22moption is enabled.

             [1mclock-mode-colour [4m[22mcolour[0m
                     Set clock colour.

             [1mclock-mode-style [22m[[1m12 [22m| [1m24[22m]
                     Set clock hour format.

             [1mforce-height [4m[22mheight[0m
             [1mforce-width [4m[22mwidth[0m
                     Prevent [1mtmux [22mfrom resizing a window to greater than [4mwidth[24m or [4mheight[24m.  A value of zero restores the default unlimited setting.

             [1mmain-pane-height [4m[22mheight[0m
             [1mmain-pane-width [4m[22mwidth[0m
                     Set the width or height of the main (left or top) pane in the [1mmain-horizontal [22mor [1mmain-vertical [22mlayouts.

             [1mmode-keys [22m[[1mvi [22m| [1memacs[22m]
                     Use vi or emacs-style key bindings in copy mode.  The default is emacs, unless VISUAL or EDITOR contains â€˜viâ€™.

             [1mmode-style [4m[22mstyle[0m
                     Set window modes style.  For how to specify [4mstyle[24m, see the [1mmessage-command-style [22moption.

             [1mmonitor-activity [22m[[1mon [22m| [1moff[22m]
                     Monitor for activity in the window.  Windows with activity are highlighted in the status line.

             [1mmonitor-bell [22m[[1mon [22m| [1moff[22m]
                     Monitor for a bell in the window.  Windows with a bell are highlighted in the status line.

             [1mmonitor-silence [22m[[1minterval[22m]
                     Monitor for silence (no activity) in the window within [1minterval [22mseconds.  Windows that have been silent for the interval are highlighted in the status line.  An
                     interval of zero disables the monitoring.

             [1mother-pane-height [4m[22mheight[0m
                     Set the height of the other panes (not the main pane) in the [1mmain-horizontal [22mlayout.  If this option is set to 0 (the default), it will have no effect.  If both
                     the [1mmain-pane-height [22mand [1mother-pane-height [22moptions are set, the main pane will grow taller to make the other panes the specified height, but will never shrink to
                     do so.

             [1mother-pane-width [4m[22mwidth[0m
                     Like [1mother-pane-height[22m, but set the width of other panes in the [1mmain-vertical [22mlayout.

             [1mpane-active-border-style [4m[22mstyle[0m
                     Set the pane border style for the currently active pane.  For how to specify [4mstyle[24m, see the [1mmessage-command-style [22moption.  Attributes are ignored.

             [1mpane-base-index [4m[22mindex[0m
                     Like [1mbase-index[22m, but set the starting index for pane numbers.

             [1mpane-border-format [4m[22mformat[0m
                     Set the text shown in pane border status lines.

             [1mpane-border-status [22m[[1moff [22m| [1mtop [22m| [1mbottom[22m]
                     Turn pane border status lines off or set their position.

             [1mpane-border-style [4m[22mstyle[0m
                     Set the pane border style for panes aside from the active pane.  For how to specify [4mstyle[24m, see the [1mmessage-command-style [22moption.  Attributes are ignored.

             [1mremain-on-exit [22m[[1mon [22m| [1moff[22m]
                     A window with this flag set is not destroyed when the program running in it exits.  The window may be reactivated with the [1mrespawn-window [22mcommand.

             [1msynchronize-panes [22m[[1mon [22m| [1moff[22m]
                     Duplicate input to any pane to all other panes in the same window (only for panes that are not in any special mode).

             [1mwindow-active-style [4m[22mstyle[0m
                     Set the style for the window's active pane.  For how to specify [4mstyle[24m, see the [1mmessage-command-style [22moption.

             [1mwindow-status-activity-style [4m[22mstyle[0m
                     Set status line style for windows with an activity alert.  For how to specify [4mstyle[24m, see the [1mmessage-command-style [22moption.

             [1mwindow-status-bell-style [4m[22mstyle[0m
                     Set status line style for windows with a bell alert.  For how to specify [4mstyle[24m, see the [1mmessage-command-style [22moption.

             [1mwindow-status-current-format [4m[22mstring[0m
                     Like [4mwindow-status-format[24m, but is the format used when the window is the current window.

             [1mwindow-status-current-style [4m[22mstyle[0m
                     Set status line style for the currently active window.  For how to specify [4mstyle[24m, see the [1mmessage-command-style [22moption.

             [1mwindow-status-format [4m[22mstring[0m
                     Set the format in which the window is displayed in the status line window list.  See the [4mstatus-left[24m option for details of special character sequences available.
                     The default is â€˜#I:#W#Fâ€™.

             [1mwindow-status-last-style [4m[22mstyle[0m
                     Set status line style for the last active window.  For how to specify [4mstyle[24m, see the [1mmessage-command-style [22moption.

             [1mwindow-status-separator [4m[22mstring[0m
                     Sets the separator drawn between windows in the status line.  The default is a single space character.

             [1mwindow-status-style [4m[22mstyle[0m
                     Set status line style for a single window.  For how to specify [4mstyle[24m, see the [1mmessage-command-style [22moption.

             [1mwindow-style [4m[22mstyle[0m
                     Set the default window style.  For how to specify [4mstyle[24m, see the [1mmessage-command-style [22moption.

             [1mwrap-search [22m[[1mon [22m| [1moff[22m]
                     If this option is set, searches will wrap around the end of the pane contents.  The default is on.

             [1mxterm-keys [22m[[1mon [22m| [1moff[22m]
                     If this option is set, [1mtmux [22mwill generate xterm(1) -style function key sequences; these have a number included to indicate modifiers such as Shift, Alt or Ctrl.

     [1mshow-options [22m[[1m-gqsvw[22m] [[1m-t [4m[22mtarget-session[24m | [4mtarget-window[24m] [[4moption[24m]
                   (alias: [1mshow[22m)
             Show the window options (or a single window option if given) with [1m-w [22m(equivalent to [1mshow-window-options[22m), the server options with [1m-s[22m, otherwise the session options for
             [4mtarget[24m [4msession[24m.  Global session or window options are listed if [1m-g [22mis used.  [1m-v [22mshows only the option value, not the name.  If [1m-q [22mis set, no error will be returned if
             [4moption[24m is unset.

     [1mshow-window-options [22m[[1m-gv[22m] [[1m-t [4m[22mtarget-window[24m] [[4moption[24m]
                   (alias: [1mshoww[22m)
             List the window options or a single option for [4mtarget-window[24m, or the global window options if [1m-g [22mis used.  [1m-v [22mshows only the option value, not the name.

[1mHOOKS[0m
     [1mtmux [22mallows commands to run on various triggers, called [4mhooks[24m.  Most [1mtmux [22mcommands have an [4mafter[24m hook and there are a number of hooks not associated with commands.

     A command's after hook is run after it completes, except when the command is run as part of a hook itself.  They are named with an â€˜after-â€™ prefix.  For example, the following
     command adds a hook to select the even-vertical layout after every [1msplit-window[22m:

           set-hook after-split-window "selectl even-vertical"

     All the notifications listed in the [4mCONTROL[24m [4mMODE[24m section are hooks (without any arguments), except [1m%exit[22m.  The following additional hooks are available:

     alert-activity          Run when a window has activity.  See [1mmonitor-activity[22m.

     alert-bell              Run when a window has received a bell.  See [1mmonitor-bell[22m.

     alert-silence           Run when a window has been silent.  See [1mmonitor-silence[22m.

     client-attached         Run when a client is attached.

     client-detached         Run when a client is detached

     client-resized          Run when a client is resized.

     client-session-changed  Run when a client's attached session is changed.

     pane-died               Run when the program running in a pane exits, but [1mremain-on-exit [22mis on so the pane has not closed.

     pane-exited             Run when the program running in a pane exits.

     pane-set-clipboard      Run when the terminal clipboard is set using the xterm(1) escape sequence.

     session-created         Run when a new session created.

     session-closed          Run when a session closed.

     session-renamed         Run when a session is renamed.

     window-linked           Run when a window is linked into a session.

     window-renamed          Run when a window is renamed.

     window-unlinked         Run when a window is unlinked from a session.

     Hooks are managed with these commands:

     [1mset-hook [22m[[1m-gu[22m] [[1m-t [4m[22mtarget-session[24m] [4mhook-name[24m [4mcommand[0m
             Sets (or with [1m-u [22munsets) hook [4mhook-name[24m to [4mcommand[24m.  If [1m-g [22mis given, [4mhook-name[24m is added to the global list of hooks, otherwise it is added to the session hooks (for
             [4mtarget-session[24m with [1m-t[22m).  Like options, session hooks inherit from the global ones.

     [1mshow-hooks [22m[[1m-g[22m] [[1m-t [4m[22mtarget-session[24m]
             Shows the global list of hooks with [1m-g[22m, otherwise the session hooks.

[1mMOUSE SUPPORT[0m
     If the [1mmouse [22moption is on (the default is off), [1mtmux [22mallows mouse events to be bound as keys.  The name of each key is made up of a mouse event (such as â€˜MouseUp1â€™) and a location
     suffix (one of â€˜Paneâ€™ for the contents of a pane, â€˜Borderâ€™ for a pane border or â€˜Statusâ€™ for the status line).  The following mouse events are available:

           WheelUp       WheelDown
           MouseDown1    MouseUp1      MouseDrag1   MouseDragEnd1
           MouseDown2    MouseUp2      MouseDrag2   MouseDragEnd2
           MouseDown3    MouseUp3      MouseDrag3   MouseDragEnd3
           DoubleClick1  DoubleClick2  DoubleClick3
           TripleClick1  TripleClick2  TripleClick3

     Each should be suffixed with a location, for example â€˜MouseDown1Statusâ€™.

     The special token â€˜{mouse}â€™ or â€˜=â€™ may be used as [4mtarget-window[24m or [4mtarget-pane[24m in commands bound to mouse key bindings.  It resolves to the window or pane over which the mouse
     event took place (for example, the window in the status line over which button 1 was released for a â€˜MouseUp1Statusâ€™ binding, or the pane over which the wheel was scrolled for a
     â€˜WheelDownPaneâ€™ binding).

     The [1msend-keys -M [22mflag may be used to forward a mouse event to a pane.

     The default key bindings allow the mouse to be used to select and resize panes, to copy text and to change window using the status line.  These take effect if the [1mmouse [22moption is
     turned on.

[1mFORMATS[0m
     Certain commands accept the [1m-F [22mflag with a [4mformat[24m argument.  This is a string which controls the output format of the command.  Replacement variables are enclosed in â€˜#{â€™ and â€˜}â€™,
     for example â€˜#{session_name}â€™.  The possible variables are listed in the table below, or the name of a [1mtmux [22moption may be used for an option's value.  Some variables have a
     shorter alias such as â€˜#Sâ€™, and â€˜##â€™ is replaced by a single â€˜#â€™.

     Conditionals are available by prefixing with â€˜?â€™ and separating two alternatives with a comma; if the specified variable exists and is not zero, the first alternative is chosen,
     otherwise the second is used.  For example â€˜#{?session_attached,attached,not attached}â€™ will include the string â€˜attachedâ€™ if the session is attached and the string â€˜not attachedâ€™
     if it is unattached, or â€˜#{?automatic-rename,yes,no}â€™ will include â€˜yesâ€™ if [1mautomatic-rename [22mis enabled, or â€˜noâ€™ if not.

     Comparisons may be expressed by prefixing two comma-separated alternatives by â€˜==â€™ or â€˜!=â€™ and a colon.  For example â€˜#{==:#{host},myhost}â€™ will be replaced by â€˜1â€™ if running on
     â€˜myhostâ€™, otherwise by â€˜0â€™.  An â€˜mâ€™ specifies an fnmatch(3) comparison where the first argument is the pattern and the second the string to compare, for example
     â€˜#{m:*foo*,#{host}}â€™.  â€˜||â€™ and â€˜&&â€™ evaluate to true if either or both of two comma-separated alternatives are true, for example â€˜#{||,#{pane_in_mode},#{alternate_on}}â€™.  A â€˜Câ€™
     performs a search for an fnmatch(3) pattern in the pane content and evaluates to zero if not found, or a line number if found.

     A limit may be placed on the length of the resultant string by prefixing it by an â€˜=â€™, a number and a colon.  Positive numbers count from the start of the string and negative from
     the end, so â€˜#{=5:pane_title}â€™ will include at most the first 5 characters of the pane title, or â€˜#{=-5:pane_title}â€™ the last 5 characters.  Prefixing a time variable with â€˜t:â€™
     will convert it to a string, so if â€˜#{window_activity}â€™ gives â€˜1445765102â€™, â€˜#{t:window_activity}â€™ gives â€˜Sun Oct 25 09:25:02 2015â€™.  The â€˜b:â€™ and â€˜d:â€™ prefixes are basename(3)
     and dirname(3) of the variable respectively.  A prefix of the form â€˜s/foo/bar/:â€™ will substitute â€˜fooâ€™ with â€˜barâ€™ throughout.

     In addition, the first line of a shell command's output may be inserted using â€˜#()â€™.  For example, â€˜#(uptime)â€™ will insert the system's uptime.  When constructing formats, [1mtmux[0m
     does not wait for â€˜#()â€™ commands to finish; instead, the previous result from running the same command is used, or a placeholder if the command has not been run before.  If the
     command hasn't exited, the most recent line of output will be used, but the status line will not be updated more than once a second.  Commands are executed with the [1mtmux [22mglobal
     environment set (see the [4mENVIRONMENT[24m section).

     The following variables are available, where appropriate:

     [1mVariable name          Alias    Replaced with[0m
     alternate_on                    If pane is in alternate screen
     alternate_saved_x               Saved cursor X in alternate screen
     alternate_saved_y               Saved cursor Y in alternate screen
     buffer_created                  Time buffer created
     buffer_name                     Name of buffer
     buffer_sample                   Sample of start of buffer
     buffer_size                     Size of the specified buffer in bytes
     client_activity                 Time client last had activity
     client_created                  Time client created
     client_control_mode             1 if client is in control mode
     client_discarded                Bytes discarded when client behind
     client_height                   Height of client
     client_key_table                Current key table
     client_last_session             Name of the client's last session
     client_name                     Name of client
     client_pid                      PID of client process
     client_prefix                   1 if prefix key has been pressed
     client_readonly                 1 if client is readonly
     client_session                  Name of the client's session
     client_termname                 Terminal name of client
     client_termtype                 Terminal type of client
     client_tty                      Pseudo terminal of client
     client_utf8                     1 if client supports utf8
     client_width                    Width of client
     client_written                  Bytes written to client
     command                         Name of command in use, if any
     command_list_name               Command name if listing commands
     command_list_alias              Command alias if listing commands
     command_list_usage              Command usage if listing commands
     cursor_flag                     Pane cursor flag
     cursor_x                        Cursor X position in pane
     cursor_y                        Cursor Y position in pane
     history_bytes                   Number of bytes in window history
     history_limit                   Maximum window history lines
     history_size                    Size of history in lines
     hook                            Name of running hook, if any
     hook_pane                       ID of pane where hook was run, if any
     hook_session                    ID of session where hook was run, if any
     hook_session_name               Name of session where hook was run, if any
     hook_window                     ID of window where hook was run, if any
     hook_window_name                Name of window where hook was run, if any
     host                   #H       Hostname of local host
     host_short             #h       Hostname of local host (no domain name)
     insert_flag                     Pane insert flag
     keypad_cursor_flag              Pane keypad cursor flag
     keypad_flag                     Pane keypad flag
     line                            Line number in the list
     mouse_any_flag                  Pane mouse any flag
     mouse_button_flag               Pane mouse button flag
     mouse_standard_flag             Pane mouse standard flag
     mouse_all_flag                  Pane mouse all flag
     pane_active                     1 if active pane
     pane_at_bottom                  1 if pane is at the bottom of window
     pane_at_left                    1 if pane is at the left of window
     pane_at_right                   1 if pane is at the right of window
     pane_at_top                     1 if pane is at the top of window
     pane_bottom                     Bottom of pane
     pane_current_command            Current command if available
     pane_current_path               Current path if available
     pane_dead                       1 if pane is dead
     pane_dead_status                Exit status of process in dead pane
     pane_format                     1 if format is for a pane (not assuming the current)
     pane_height                     Height of pane
     pane_id                #D       Unique pane ID
     pane_in_mode                    If pane is in a mode
     pane_input_off                  If input to pane is disabled
     pane_index             #P       Index of pane
     pane_left                       Left of pane
     pane_mode                       Name of pane mode, if any.
     pane_pid                        PID of first process in pane
     pane_pipe                       1 if pane is being piped
     pane_right                      Right of pane
     pane_search_string              Last search string in copy mode
     pane_start_command              Command pane started with
     pane_synchronized               If pane is synchronized
     pane_tabs                       Pane tab positions
     pane_title             #T       Title of pane
     pane_top                        Top of pane
     pane_tty                        Pseudo terminal of pane
     pane_width                      Width of pane
     pid                             Server PID
     scroll_region_lower             Bottom of scroll region in pane
     scroll_region_upper             Top of scroll region in pane
     scroll_position                 Scroll position in copy mode
     selection_present               1 if selection started in copy mode
     session_alerts                  List of window indexes with alerts
     session_attached                Number of clients session is attached to
     session_activity                Time of session last activity
     session_created                 Time session created
     session_format                  1 if format is for a session (not assuming the current)
     session_last_attached           Time session last attached
     session_group                   Name of session group
     session_group_size              Size of session group
     session_group_list              List of sessions in group
     session_grouped                 1 if session in a group
     session_height                  Height of session
     session_id                      Unique session ID
     session_many_attached           1 if multiple clients attached
     session_name           #S       Name of session
     session_stack                   Window indexes in most recent order
     session_width                   Width of session
     session_windows                 Number of windows in session
     socket_path                     Server socket path
     start_time                      Server start time
     version                         Server version
     window_activity                 Time of window last activity
     window_activity_flag            1 if window has activity
     window_active                   1 if window active
     window_bell_flag                1 if window has bell
     window_flags           #F       Window flags
     window_format                   1 if format is for a window (not assuming the current)
     window_height                   Height of window
     window_id                       Unique window ID
     window_index           #I       Index of window
     window_last_flag                1 if window is the last used
     window_layout                   Window layout description, ignoring zoomed window panes
     window_linked                   1 if window is linked across sessions
     window_name            #W       Name of window
     window_panes                    Number of panes in window
     window_silence_flag             1 if window has silence alert
     window_stack_index              Index in session most recent stack
     window_visible_layout           Window layout description, respecting zoomed window panes
     window_width                    Width of window
     window_zoomed_flag              1 if window is zoomed
     wrap_flag                       Pane wrap flag

[1mNAMES AND TITLES[0m
     [1mtmux [22mdistinguishes between names and titles.  Windows and sessions have names, which may be used to specify them in targets and are displayed in the status line and various lists:
     the name is the [1mtmux [22midentifier for a window or session.  Only panes have titles.  A pane's title is typically set by the program running inside the pane using an escape sequence
     (like it would set the xterm(1) window title in X(7)).  Windows themselves do not have titles - a window's title is the title of its active pane.  [1mtmux [22mitself may set the title of
     the terminal in which the client is running, see the [1mset-titles [22moption.

     A session's name is set with the [1mnew-session [22mand [1mrename-session [22mcommands.  A window's name is set with one of:

     1.      A command argument (such as [1m-n [22mfor [1mnew-window [22mor [1mnew-session[22m).

     2.      An escape sequence:

                   $ printf '\033kWINDOW_NAME\033\\'

     3.      Automatic renaming, which sets the name to the active command in the window's active pane.  See the [1mautomatic-rename [22moption.

     When a pane is first created, its title is the hostname.  A pane's title can be set via the OSC title setting sequence, for example:

           $ printf '\033]2;My Title\033\\'

     It can also be modified with the [1mselect-pane -T [22mcommand.

[1mENVIRONMENT[0m
     When the server is started, [1mtmux [22mcopies the environment into the [4mglobal[24m [4menvironment[24m; in addition, each session has a [4msession[24m [4menvironment[24m.  When a window is created, the session
     and global environments are merged.  If a variable exists in both, the value from the session environment is used.  The result is the initial environment passed to the new
     process.

     The [1mupdate-environment [22msession option may be used to update the session environment from the client when a new session is created or an old reattached.  [1mtmux [22malso initialises the
     TMUX variable with some internal information to allow commands to be executed from inside, and the TERM variable with the correct terminal setting of â€˜screenâ€™.

     Commands to alter and view the environment are:

     [1mset-environment [22m[[1m-gru[22m] [[1m-t [4m[22mtarget-session[24m] [4mname[24m [[4mvalue[24m]
                   (alias: [1msetenv[22m)
             Set or unset an environment variable.  If [1m-g [22mis used, the change is made in the global environment; otherwise, it is applied to the session environment for [4mtarget-session[24m.
             The [1m-u [22mflag unsets a variable.  [1m-r [22mindicates the variable is to be removed from the environment before starting a new process.

     [1mshow-environment [22m[[1m-gs[22m] [[1m-t [4m[22mtarget-session[24m] [[4mvariable[24m]
                   (alias: [1mshowenv[22m)
             Display the environment for [4mtarget-session[24m or the global environment with [1m-g[22m.  If [4mvariable[24m is omitted, all variables are shown.  Variables removed from the environment are
             prefixed with â€˜-â€™.  If [1m-s [22mis used, the output is formatted as a set of Bourne shell commands.

[1mSTATUS LINE[0m
     [1mtmux [22mincludes an optional status line which is displayed in the bottom line of each terminal.  By default, the status line is enabled (it may be disabled with the [1mstatus [22msession
     option) and contains, from left-to-right: the name of the current session in square brackets; the window list; the title of the active pane in double quotes; and the time and
     date.

     The status line is made of three parts: configurable left and right sections (which may contain dynamic content such as the time or output from a shell command, see the
     [1mstatus-left[22m, [1mstatus-left-length[22m, [1mstatus-right[22m, and [1mstatus-right-length [22moptions below), and a central window list.  By default, the window list shows the index, name and (if any)
     flag of the windows present in the current session in ascending numerical order.  It may be customised with the [4mwindow-status-format[24m and [4mwindow-status-current-format[24m options.  The
     flag is one of the following symbols appended to the window name:

           [1mSymbol    Meaning[0m
           *         Denotes the current window.
           -         Marks the last window (previously selected).
           #         Window activity is monitored and activity has been detected.
           !         Window bells are monitored and a bell has occurred in the window.
           ~         The window has been silent for the monitor-silence interval.
           M         The window contains the marked pane.
           Z         The window's active pane is zoomed.

     The # symbol relates to the [1mmonitor-activity [22mwindow option.  The window name is printed in inverted colours if an alert (bell, activity or silence) is present.

     The colour and attributes of the status line may be configured, the entire status line using the [1mstatus-style [22msession option and individual windows using the [1mwindow-status-style[0m
     window option.

     The status line is automatically refreshed at interval if it has changed, the interval may be controlled with the [1mstatus-interval [22msession option.

     Commands related to the status line are as follows:

     [1mcommand-prompt [22m[[1m-1i[22m] [[1m-I [4m[22minputs[24m] [[1m-p [4m[22mprompts[24m] [[1m-t [4m[22mtarget-client[24m] [[4mtemplate[24m]
             Open the command prompt in a client.  This may be used from inside [1mtmux [22mto execute commands interactively.

             If [4mtemplate[24m is specified, it is used as the command.  If present, [1m-I [22mis a comma-separated list of the initial text for each prompt.  If [1m-p [22mis given, [4mprompts[24m is a comma-
             separated list of prompts which are displayed in order; otherwise a single prompt is displayed, constructed from [4mtemplate[24m if it is present, or â€˜:â€™ if not.

             Before the command is executed, the first occurrence of the string â€˜%%â€™ and all occurrences of â€˜%1â€™ are replaced by the response to the first prompt, all â€˜%2â€™ are replaced
             with the response to the second prompt, and so on for further prompts.  Up to nine prompt responses may be replaced (â€˜%1â€™ to â€˜%9â€™).  â€˜%%%â€™ is like â€˜%%â€™ but any quotation
             marks are escaped.

             [1m-1 [22mmakes the prompt only accept one key press, in this case the resulting input is a single character.  [1m-i [22mexecutes the command every time the prompt input changes instead
             of when the user exits the command prompt.

             The following keys have a special meaning in the command prompt, depending on the value of the [1mstatus-keys [22moption:

                   [1mFunction                             vi        emacs[0m
                   Cancel command prompt                Escape    Escape
                   Delete current word                            C-w
                   Delete entire command                d         C-u
                   Delete from cursor to end            D         C-k
                   Execute command                      Enter     Enter
                   Get next command from history                  Down
                   Get previous command from history              Up
                   Insert top paste buffer              p         C-y
                   Look for completions                 Tab       Tab
                   Move cursor left                     h         Left
                   Move cursor right                    l         Right
                   Move cursor to end                   $         C-e
                   Move cursor to next word             w         M-f
                   Move cursor to previous word         b         M-b
                   Move cursor to start                 0         C-a
                   Transpose characters                           C-t

     [1mconfirm-before [22m[[1m-p [4m[22mprompt[24m] [[1m-t [4m[22mtarget-client[24m] [4mcommand[0m
                   (alias: [1mconfirm[22m)
             Ask for confirmation before executing [4mcommand[24m.  If [1m-p [22mis given, [4mprompt[24m is the prompt to display; otherwise a prompt is constructed from [4mcommand[24m.  It may contain the spe-
             cial character sequences supported by the [1mstatus-left [22moption.

             This command works only from inside [1mtmux[22m.

     [1mdisplay-message [22m[[1m-p[22m] [[1m-c [4m[22mtarget-client[24m] [[1m-t [4m[22mtarget-pane[24m] [[4mmessage[24m]
                   (alias: [1mdisplay[22m)
             Display a message.  If [1m-p [22mis given, the output is printed to stdout, otherwise it is displayed in the [4mtarget-client[24m status line.  The format of [4mmessage[24m is described in the
             [4mFORMATS[24m section; information is taken from [4mtarget-pane[24m if [1m-t [22mis given, otherwise the active pane for the session attached to [4mtarget-client[24m.

[1mBUFFERS[0m
     [1mtmux [22mmaintains a set of named [4mpaste[24m [4mbuffers[24m.  Each buffer may be either explicitly or automatically named.  Explicitly named buffers are named when created with the [1mset-buffer [22mor
     [1mload-buffer [22mcommands, or by renaming an automatically named buffer with [1mset-buffer -n[22m.  Automatically named buffers are given a name such as â€˜buffer0001â€™, â€˜buffer0002â€™ and so on.
     When the [1mbuffer-limit [22moption is reached, the oldest automatically named buffer is deleted.  Explicitly named buffers are not subject to [1mbuffer-limit [22mand may be deleted with
     [1mdelete-buffer [22mcommand.

     Buffers may be added using [1mcopy-mode [22mor the [1mset-buffer [22mand [1mload-buffer [22mcommands, and pasted into a window using the [1mpaste-buffer [22mcommand.  If a buffer command is used and no buf-
     fer is specified, the most recently added automatically named buffer is assumed.

     A configurable history buffer is also maintained for each window.  By default, up to 2000 lines are kept; this can be altered with the [1mhistory-limit [22moption (see the [1mset-option[0m
     command above).

     The buffer commands are as follows:

     [1mchoose-buffer [22m[[1m-NZ[22m] [[1m-F [4m[22mformat[24m] [[1m-f [4m[22mfilter[24m] [[1m-O [4m[22msort-order[24m] [[1m-t [4m[22mtarget-pane[24m] [[4mtemplate[24m]
             Put a pane into buffer mode, where a buffer may be chosen interactively from a list.  [1m-Z [22mzooms the pane.  The following keys may be used in buffer mode:

                   [1mKey    Function[0m
                   Enter  Paste selected buffer
                   Up     Select previous buffer
                   Down   Select next buffer
                   C-s    Search by name or content
                   n      Repeat last search
                   t      Toggle if buffer is tagged
                   T      Tag no buffers
                   C-t    Tag all buffers
                   p      Paste selected buffer
                   P      Paste tagged buffers
                   d      Delete selected buffer
                   D      Delete tagged buffers
                   f      Enter a format to filter items
                   O      Change sort order
                   v      Toggle preview
                   q      Exit mode

             After a buffer is chosen, â€˜%%â€™ is replaced by the buffer name in [4mtemplate[24m and the result executed as a command.  If [4mtemplate[24m is not given, "paste-buffer -b '%%'" is used.

             [1m-O [22mspecifies the initial sort order: one of â€˜timeâ€™, â€˜nameâ€™ or â€˜sizeâ€™.  [1m-f [22mspecifies an initial filter: the filter is a format - if it evaluates to zero, the item in the
             list is not shown, otherwise it is shown.  If a filter would lead to an empty list, it is ignored.  [1m-F [22mspecifies the format for each item in the list.  [1m-N [22mstarts without
             the preview.  This command works only if at least one client is attached.

     [1mclear-history [22m[[1m-t [4m[22mtarget-pane[24m]
                   (alias: [1mclearhist[22m)
             Remove and free the history for the specified pane.

     [1mdelete-buffer [22m[[1m-b [4m[22mbuffer-name[24m]
                   (alias: [1mdeleteb[22m)
             Delete the buffer named [4mbuffer-name[24m, or the most recently added automatically named buffer if not specified.

     [1mlist-buffers [22m[[1m-F [4m[22mformat[24m]
                   (alias: [1mlsb[22m)
             List the global buffers.  For the meaning of the [1m-F [22mflag, see the [4mFORMATS[24m section.

     [1mload-buffer [22m[[1m-b [4m[22mbuffer-name[24m] [4mpath[0m
                   (alias: [1mloadb[22m)
             Load the contents of the specified paste buffer from [4mpath[24m.

     [1mpaste-buffer [22m[[1m-dpr[22m] [[1m-b [4m[22mbuffer-name[24m] [[1m-s [4m[22mseparator[24m] [[1m-t [4m[22mtarget-pane[24m]
                   (alias: [1mpasteb[22m)
             Insert the contents of a paste buffer into the specified pane.  If not specified, paste into the current one.  With [1m-d[22m, also delete the paste buffer.  When output, any
             linefeed (LF) characters in the paste buffer are replaced with a separator, by default carriage return (CR).  A custom separator may be specified using the [1m-s [22mflag.  The
             [1m-r [22mflag means to do no replacement (equivalent to a separator of LF).  If [1m-p [22mis specified, paste bracket control codes are inserted around the buffer if the application
             has requested bracketed paste mode.

     [1msave-buffer [22m[[1m-a[22m] [[1m-b [4m[22mbuffer-name[24m] [4mpath[0m
                   (alias: [1msaveb[22m)
             Save the contents of the specified paste buffer to [4mpath[24m.  The [1m-a [22moption appends to rather than overwriting the file.

     [1mset-buffer [22m[[1m-a[22m] [[1m-b [4m[22mbuffer-name[24m] [[1m-n [4m[22mnew-buffer-name[24m] [4mdata[0m
                   (alias: [1msetb[22m)
             Set the contents of the specified buffer to [4mdata[24m.  The [1m-a [22moption appends to rather than overwriting the buffer.  The [1m-n [22moption renames the buffer to [4mnew-buffer-name[24m.

     [1mshow-buffer [22m[[1m-b [4m[22mbuffer-name[24m]
                   (alias: [1mshowb[22m)
             Display the contents of the specified buffer.

[1mMISCELLANEOUS[0m
     Miscellaneous commands are as follows:

     [1mclock-mode [22m[[1m-t [4m[22mtarget-pane[24m]
             Display a large clock.

     [1mif-shell [22m[[1m-bF[22m] [[1m-t [4m[22mtarget-pane[24m] [4mshell-command[24m [4mcommand[24m [[4mcommand[24m]
                   (alias: [1mif[22m)
             Execute the first [4mcommand[24m if [4mshell-command[24m returns success or the second [4mcommand[24m otherwise.  Before being executed, [4mshell-command[24m is expanded using the rules specified in
             the [4mFORMATS[24m section, including those relevant to [4mtarget-pane[24m.  With [1m-b[22m, [4mshell-command[24m is run in the background.

             If [1m-F [22mis given, [4mshell-command[24m is not executed but considered success if neither empty nor zero (after formats are expanded).

     [1mlock-server[0m
                   (alias: [1mlock[22m)
             Lock each client individually by running the command specified by the [1mlock-command [22moption.

     [1mrun-shell [22m[[1m-b[22m] [[1m-t [4m[22mtarget-pane[24m] [4mshell-command[0m
                   (alias: [1mrun[22m)
             Execute [4mshell-command[24m in the background without creating a window.  Before being executed, shell-command is expanded using the rules specified in the [4mFORMATS[24m section.
             With [1m-b[22m, the command is run in the background.  After it finishes, any output to stdout is displayed in copy mode (in the pane specified by [1m-t [22mor the current pane if omit-
             ted).  If the command doesn't return success, the exit status is also displayed.

     [1mwait-for [22m[[1m-L [22m| [1m-S [22m| [1m-U[22m] [4mchannel[0m
                   (alias: [1mwait[22m)
             When used without options, prevents the client from exiting until woken using [1mwait-for -S [22mwith the same channel.  When [1m-L [22mis used, the channel is locked and any clients
             that try to lock the same channel are made to wait until the channel is unlocked with [1mwait-for -U[22m.  This command only works from outside [1mtmux[22m.

[1mTERMINFO EXTENSIONS[0m
     [1mtmux [22munderstands some unofficial extensions to terminfo(5):

     [4mCs[24m, [4mCr[24m  Set the cursor colour.  The first takes a single string argument and is used to set the colour; the second takes no arguments and restores the default cursor colour.  If
             set, a sequence such as this may be used to change the cursor colour from inside [1mtmux[22m:

                   $ printf '\033]12;red\033\\'

     [4mSs[24m, [4mSe[24m  Set or reset the cursor style.  If set, a sequence such as this may be used to change the cursor to an underline:

                   $ printf '\033[4 q'

             If [4mSe[24m is not set, Ss with argument 0 will be used to reset the cursor style instead.

     [4mTc[24m      Indicate that the terminal supports the â€˜direct colourâ€™ RGB escape sequence (for example, \e[38;2;255;255;255m).

             If supported, this is used for the OSC initialize colour escape sequence (which may be enabled by adding the â€˜initcâ€™ and â€˜cccâ€™ capabilities to the [1mtmux [22mterminfo(5) entry).

     [4mMs[24m      Store the current buffer in the host terminal's selection (clipboard).  See the [4mset-clipboard[24m option above and the xterm(1) man page.

[1mCONTROL MODE[0m
     [1mtmux [22moffers a textual interface called [4mcontrol[24m [4mmode[24m.  This allows applications to communicate with [1mtmux [22musing a simple text-only protocol.

     In control mode, a client sends [1mtmux [22mcommands or command sequences terminated by newlines on standard input.  Each command will produce one block of output on standard output.  An
     output block consists of a [4m%begin[24m line followed by the output (which may be empty).  The output block ends with a [4m%end[24m or [4m%error[24m.  [4m%begin[24m and matching [4m%end[24m or [4m%error[24m have two
     arguments: an integer time (as seconds from epoch) and command number.  For example:

           %begin 1363006971 2
           0: ksh* (1 panes) [80x24] [layout b25f,80x24,0,0,2] @2 (active)
           %end 1363006971 2

     The [1mrefresh-client -C [22mcommand may be used to set the size of a client in control mode.

     In control mode, [1mtmux [22moutputs notifications.  A notification will never occur inside an output block.

     The following notifications are defined:

     [1m%client-session-changed [4m[22mclient[24m [4msession-id[24m [4mname[0m
             The client is now attached to the session with ID [4msession-id[24m, which is named [4mname[24m.

     [1m%exit [22m[[4mreason[24m]
             The [1mtmux [22mclient is exiting immediately, either because it is not attached to any session or an error occurred.  If present, [4mreason[24m describes why the client exited.

     [1m%layout-change [4m[22mwindow-id[24m [4mwindow-layout[24m [4mwindow-visible-layout[24m [4mwindow-flags[0m
             The layout of a window with ID [4mwindow-id[24m changed.  The new layout is [4mwindow-layout[24m.  The window's visible layout is [4mwindow-visible-layout[24m and the window flags are
             [4mwindow-flags[24m.

     [1m%output [4m[22mpane-id[24m [4mvalue[0m
             A window pane produced output.  [4mvalue[24m escapes non-printable characters and backslash as octal \xxx.

     [1m%pane-mode-changed [4m[22mpane-id[0m
             The pane with ID [4mpane-id[24m has changed mode.

     [1m%session-changed [4m[22msession-id[24m [4mname[0m
             The client is now attached to the session with ID [4msession-id[24m, which is named [4mname[24m.

     [1m%session-renamed [4m[22mname[0m
             The current session was renamed to [4mname[24m.

     [1m%session-window-changed [4m[22msession-id[24m [4mwindow-id[0m
             The session with ID [4msession-id[24m changed its active window to the window with ID [4mwindow-id[24m.

     [1m%sessions-changed[0m
             A session was created or destroyed.

     [1m%unlinked-window-add [4m[22mwindow-id[0m
             The window with ID [4mwindow-id[24m was created but is not linked to the current session.

     [1m%window-add [4m[22mwindow-id[0m
             The window with ID [4mwindow-id[24m was linked to the current session.

     [1m%window-close [4m[22mwindow-id[0m
             The window with ID [4mwindow-id[24m closed.

     [1m%window-pane-changed [4m[22mwindow-id[24m [4mpane-id[0m
             The active pane in the window with ID [4mwindow-id[24m changed to the pane with ID [4mpane-id[24m.

     [1m%window-renamed [4m[22mwindow-id[24m [4mname[0m
             The window with ID [4mwindow-id[24m was renamed to [4mname[24m.

[1mFILES[0m
     ~/.tmux.conf       Default [1mtmux [22mconfiguration file.
     /etc/tmux.conf     System-wide configuration file.

[1mEXAMPLES[0m
     To create a new [1mtmux [22msession running vi(1):

           $ tmux new-session vi

     Most commands have a shorter form, known as an alias.  For new-session, this is [1mnew[22m:

           $ tmux new vi

     Alternatively, the shortest unambiguous form of a command is accepted.  If there are several options, they are listed:

           $ tmux n
           ambiguous command: n, could be: new-session, new-window, next-window

     Within an active session, a new window may be created by typing â€˜C-b câ€™ (Ctrl followed by the â€˜bâ€™ key followed by the â€˜câ€™ key).

     Windows may be navigated with: â€˜C-b 0â€™ (to select window 0), â€˜C-b 1â€™ (to select window 1), and so on; â€˜C-b nâ€™ to select the next window; and â€˜C-b pâ€™ to select the previous window.

     A session may be detached using â€˜C-b dâ€™ (or by an external event such as ssh(1) disconnection) and reattached with:

           $ tmux attach-session

     Typing â€˜C-b ?â€™ lists the current key bindings in the current window; up and down may be used to navigate the list or â€˜qâ€™ to exit from it.

     Commands to be run when the [1mtmux [22mserver is started may be placed in the [4m~/.tmux.conf[24m configuration file.  Common examples include:

     Changing the default prefix key:

           set-option -g prefix C-a
           unbind-key C-b
           bind-key C-a send-prefix

     Turning the status line off, or changing its colour:

           set-option -g status off
           set-option -g status-style bg=blue

     Setting other options, such as the default command, or locking after 30 minutes of inactivity:

           set-option -g default-command "exec /bin/ksh"
           set-option -g lock-after-time 1800

     Creating new key bindings:

           bind-key b set-option status
           bind-key / command-prompt "split-window 'exec man %%'"
           bind-key S command-prompt "new-window -n %1 'ssh %1'"

[1mSEE ALSO[0m
     pty(4)

[1mAUTHORS[0m
     Nicholas Marriott <[4mnicholas.marriott@gmail.com[24m>

BSD                                                                                  March 25, 2013                                                                                  BSD
